{"version":3,"sources":["components/redux/reducers/ingredientSliceReducerToolkit.js","components/redux/reducers/authSliceReducerToolkit.js","components/redux/actions/index.js","components/redux/reducers/salesType.js","components/Access/Login.js","components/Access/RegisterSuccess.js","components/Access/Register.js","components/redux/reducers/homeSliceReducerToolkit.js","components/redux/reducers/saleSliceReducerToolkit.js","components/redux/actions/indexSales.js","components/redux/reducers/homeType.js","components/Access/Home.js","components/routes/PublicRoute.js","components/Lists/cakeList.js","components/redux/reducers/cakeSliceReducerToolkit.js","components/redux/actions/indexCake.js","components/Lists/ingredientInCakeList.js","components/Buttons/CakeButton.js","components/Lists/ingredientList.js","components/Buttons/IngredientButton.js","components/Lists/cakeInSales.js","components/Lists/salesList.js","components/Buttons/SalesButton.js","components/Buttons/Buttons.js","components/AuthenticatedComponents/AdministrationPage.js","components/routes/AuthRoute.js","components/Access/Header.js","components/App.js","components/redux/store/store.js","index.js"],"names":["console","log","ingredientSlice","createSlice","name","initialState","ingredients","errors","undefined","insertIngredient","ingredientUpdate","reducers","setIngredient","state","action","ingredientPayload","payload","map","ingredient","id","_id","disable","checked","setIngredientError","ingredientErrorPayload","setInsertIngredientAction","insertIngredientPayload","setIngredientEmpty","setIngredientUpdated","updateIngredientPayload","ingredientUpdated","newValue","setIngredientUpdateError","updateIngredientError","errorUpdate","setIngredientDisable","updateIngredientDisable","push","filter","ingrUp","setIngredientDeleted","deletedIngredientPayload","setCheckIngredient","checkedIngredient","setCheckFalseIngredient","checkFalseIngredient","setIngredientUpdate","ingredientUpdatePayload","ingredientUpdateId","setIngredientUpdateEmpty","updateEmptyPayload","setIngredientUpdateEmptyAuto","actions","authSlice","token","errorsAuth","errorsReg","setToken","tokenPayload","setErrorAuth","errorAuthPayload","error","setErrorRegister","errorRegisterPayload","setErrorAuthEmpty","errorAuthEmptyPayload","setErrorRegisterEmpty","autoReadingIngredients","dispatch","headers","localStorage","getItem","axios","get","then","response","data","result","catch","registerEmpty","loginEmpty","register","values","history","post","res","login","setItem","logout","removeItem","type","autoLogin","value","body","insertIngredientAction","deleteIngredient","delete","deletedIngredient","updateEnableIngredient","changeUpdateIngredient","saveIngredientUpdated","put","updatedIngredient","selectToken","auth","selectIngredient","selectErrorAuth","selectErrorReg","connect","props","useDispatch","useSelector","useEffect","useState","email","password","userData","setUserData","changeData","e","target","onSubmit","preventDefault","className","placeholder","onChange","RegisterSuccess","withRouter","homeSlice","home","setHomeSales","homePayload","elem","cakeId","first","second","third","listcakes","pubblicationDate","disableInfo","saleSlice","sales","salesPriceElement","insertSales","resultInsert","setSalesCake","salesCakePayload","imgLink","enableSetPrice","setErrorSales","salesErrorPayload","setSalesPriceElement","salesPriceElementPayload","setSalesCakePriceEnable","salesCakePriceEnablePayload","sale","saleIn","setSalesCakePrice","salesCakePricePayload","forEach","setSalesCakeElementError","salesCakeElementErrorPayload","arrId","saleId","errorFirstPrice","setSalesPriceInsertResult","salesPriceInsertResultPayload","setInsertSalesEmpty","setResultInsertEmpty","setCheckFalseCake","autoReadingSales","insertSalesCakeAction","changeInsertPrice","insertCakeInSales","arr","val","autoReadingSalesPrice","autoReadingSalesHome","setDisableInfo","selectSale","key","src","width","height","alt","onClick","changeDisable","weight","PublicRoute","exact","path","component","Home","Register","Login","from","to","CakeList","cakes","cake","cakeUpdate","cakeup","changeUpdateCakeAction","saveUpdateCakeAction","errorsUpdate","deleteEvent","updateEvent","cakeSlice","insertCake","setCake","cakePayload","setCakeInsert","cakeInsertPayload","setCakeIngredient","cakeIngredientInsertPayload","setCakeError","cakeErrorPayload","setCakeEmpty","cakeEmptyPayload","cakeInfo","setCakeDeleted","cakeDeletedPayload","setCakeDisable","cakeDisablePayload","setCakeUpdate","cakeUpdatePayload","cakeUpdateId","setCakeUpdatedError","cakeUpdateErrorPayload","setCakeUpdated","cakeUpdated","updatedCake","setCakeUpdateEmpty","cakeUpdateEmptyPayload","setCakeUpdateEmptyAuto","selectCake","IngredientInCakeList","insertIngredientCakeAction","CakeButton","length","obj","deletedCake","saveUpdateCake","IngredientList","changeUpdateIngredientAction","saveIngredient","cakeInSales","saleCake","changePrice","SalesList","pubblication_date","Buttons","sell","buttonView","setButtonView","viewButton","AdministrationPage","AuthRoute","activeClassName","renderHeader","App","store","configureStore","reducer","ingredientSliceReducerToolkit","authSliceReducerToolkit","homeSliceReducerToolkit","cakeSliceReducerToolkit","saleSliceReducerToolkit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d220a2e0.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconsole.log('INGREDIENTSLICE')\r\n\r\nconst ingredientSlice=createSlice({\r\n    name:'ingredientSlice',\r\n    initialState:{\r\n        ingredients:[],\r\n        errors:undefined,\r\n        //errorsUpdate:'',\r\n        insertIngredient:'',\r\n        ingredientUpdate:[]\r\n    },\r\n    reducers:{\r\n        setIngredient(state,action){\r\n            const ingredientPayload=action.payload\r\n             state.ingredients=ingredientPayload.map(ingredient=>{\r\n                    return{\r\n                        id:ingredient._id,\r\n                        name:ingredient.name,\r\n                        disable:true,\r\n                        checked:false,\r\n                        \r\n                    }  \r\n                })\r\n            \r\n        },\r\n        setIngredientError(state,action){\r\n            const ingredientErrorPayload=action.payload\r\n            return {\r\n                ...state, errors:ingredientErrorPayload\r\n            }\r\n        },\r\n        setInsertIngredientAction(state,action){\r\n            const insertIngredientPayload=action.payload\r\n            return{\r\n                ...state, insertIngredient:insertIngredientPayload\r\n            }\r\n        },\r\n        setIngredientEmpty(state,action){\r\n            const insertIngredientPayload=action.payload\r\n            return {\r\n                ...state, insertIngredient:insertIngredientPayload\r\n            }\r\n\r\n\r\n        },\r\n\r\n        setIngredientUpdated(state,action){\r\n\r\n            console.log('ACTION PAYLOAD',action.payload)\r\n\r\n            const updateIngredientPayload=action.payload\r\n            state.ingredients.map(ingredient=>{\r\n                    if (ingredient.name===updateIngredientPayload.ingredientUpdated.name){\r\n                        ingredient.name=updateIngredientPayload.newValue\r\n                        ingredient.disable=!ingredient.disable\r\n                    }\r\n                    return ingredient\r\n                })\r\n            \r\n\r\n        },\r\n        setIngredientUpdateError(state,action){\r\n\r\n            console.log('ACTION PAYLOAD DELETE',action.payload)\r\n\r\n            const updateIngredientError=action.payload;\r\n            state.ingredientUpdate.map(ingredient=>{\r\n                    if(ingredient.id===updateIngredientError.id){\r\n                        ingredient.errorUpdate=updateIngredientError.errorUpdate\r\n                    }\r\n                    return ingredient\r\n                    \r\n            })\r\n\r\n        \r\n\r\n        },\r\n\r\n        setIngredientDisable(state,action){\r\n\r\n            console.log('state in setingredientdisable',state.ingredientUpdate)\r\n            console.log('SETINGREDIENTDISABLE',action)\r\n            const updateIngredientDisable=action.payload\r\n\r\n            \r\n                state.ingredients.map(ingredient=>{\r\n                    if(ingredient.id===updateIngredientDisable){\r\n                     ingredient.disable=!ingredient.disable\r\n\r\n                     if(ingredient.disable===false){\r\n                        \r\n                        state.ingredientUpdate.push({id:ingredient.id})\r\n\r\n                     }else{\r\n\r\n                        state.ingredientUpdate=state.ingredientUpdate.filter(ingrUp=>ingrUp.id!==ingredient.id)\r\n\r\n                     }\r\n                    }\r\n                    return ingredient\r\n                })\r\n\r\n                    \r\n        },\r\n        setIngredientDeleted(state,action){\r\n\r\n            console.log('delete',action.payload)\r\n\r\n            const deletedIngredientPayload=action.payload.name\r\n             \r\n          state.ingredients=state.ingredients.filter(ingredient=>ingredient.name!==deletedIngredientPayload)\r\n          \r\n                \r\n        },\r\n        setCheckIngredient(state,action){\r\n\r\n            console.log('SETCHECKINGRE',action.payload)\r\n\r\n            const checkedIngredient=action.payload\r\n\r\n            state.ingredients.map(ingredient=>{\r\n                    if(ingredient.name===checkedIngredient.name){\r\n                        ingredient.checked=checkedIngredient.checked\r\n                    }\r\n                    return ingredient\r\n                })\r\n            \r\n\r\n        },\r\n        setCheckFalseIngredient(state,action){\r\n            const checkFalseIngredient=action.payload\r\n\r\n            state.ingredients=state.ingredients.map(ingredient=>{\r\n                    if(ingredient.checked===true){\r\n                        ingredient.checked=checkFalseIngredient\r\n                    }\r\n\r\n                    return ingredient\r\n\r\n                })\r\n            \r\n        },\r\n        setIngredientUpdate(state,action){\r\n            const ingredientUpdatePayload=action.payload\r\n\r\n            state.ingredientUpdate.map(ingredient=>{\r\n                if(ingredient.id===ingredientUpdatePayload.ingredientUpdateId){\r\n\r\n                    ingredient.newValue=ingredientUpdatePayload.newValue\r\n\r\n                }\r\n            })\r\n\r\n\r\n        },\r\n        setIngredientUpdateEmpty(state,action){\r\n\r\n            const updateEmptyPayload=action.payload;\r\n            state.ingredientUpdate=state.ingredientUpdate.filter(ingrUp=>ingrUp.id!==updateEmptyPayload.ingredientUpdateId)\r\n\r\n        },\r\n        setIngredientUpdateEmptyAuto(state,action){\r\n\r\n            state.ingredientUpdate=[]\r\n        }\r\n    }\r\n        \r\n    \r\n})\r\n\r\nexport const {setIngredient}=ingredientSlice.actions;\r\nexport const {setIngredientError}=ingredientSlice.actions;\r\nexport const {setInsertIngredientAction}=ingredientSlice.actions;\r\nexport const {setIngredientEmpty}=ingredientSlice.actions;\r\nexport const {setIngredientUpdated}=ingredientSlice.actions;\r\nexport const {setIngredientUpdateError}=ingredientSlice.actions;\r\nexport const {setIngredientDisable}=ingredientSlice.actions;\r\nexport const {setIngredientDeleted}=ingredientSlice.actions;\r\nexport const {setCheckIngredient}=ingredientSlice.actions;\r\nexport const {setCheckFalseIngredient}=ingredientSlice.actions;\r\nexport const {setIngredientUpdate}=ingredientSlice.actions;\r\nexport const {setIngredientUpdateEmpty}=ingredientSlice.actions;\r\nexport const {setIngredientUpdateEmptyAuto}=ingredientSlice.actions;\r\n\r\n\r\nexport default ingredientSlice.reducer;","import {createSlice} from '@reduxjs/toolkit';\r\n\r\n\r\nconsole.log('IN SLICE AUTH')\r\n\r\nconst authSlice=createSlice({\r\n\r\n    \r\n\r\n    name:'authSlice',\r\n    initialState:{\r\n        token:undefined,\r\n        errorsAuth:undefined,\r\n        errorsReg:undefined\r\n    },\r\n    reducers:{\r\n        setToken(state,action){\r\n            const tokenPayload=action.payload\r\n            return {\r\n                ...state, token:tokenPayload\r\n            }\r\n\r\n        },\r\n        setErrorAuth(state,action){\r\n            const errorAuthPayload=action.payload\r\n            return {\r\n                ...state, errorsAuth:errorAuthPayload.error\r\n            }\r\n        },\r\n        setErrorRegister(state,action){\r\n\r\n            const errorRegisterPayload=action.payload;\r\n            return {\r\n                ...state, errorsReg:errorRegisterPayload.error\r\n            }\r\n        },\r\n        setErrorAuthEmpty(state,action){\r\n            const errorAuthEmptyPayload=action.payload;\r\n            return {\r\n                ...state, errorsAuth:errorAuthEmptyPayload.error\r\n            }\r\n        },\r\n        setErrorRegisterEmpty(state,action){\r\n            const errorRegisterPayload=action.payload;\r\n            return {\r\n                ...state, errorsReg:errorRegisterPayload.error\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})\r\n\r\nexport const {setToken,setErrorAuth, setErrorRegister,setErrorAuthEmpty,setErrorRegisterEmpty}=authSlice.actions;\r\n\r\n\r\nexport default authSlice.reducer","import axios from 'axios';\r\nimport { SET_TOKEN , SET_ERROR} from '../reducers/authType';\r\nimport { SET_INGREDIENT, \r\n   SET_INGREDIENT_ERROR, \r\n   SET_INGREDIENT_DELETED,\r\n   SET_INGREDIENT_DISABLE, \r\n   SET_INGREDIENT_UPDATE, \r\n   SET_INGREDIENT_INSERT,\r\n   SET_INGREDIENT_EMPTY,\r\n   SET_UPDATE_ERROR } from '../reducers/ingredientType';\r\nimport {SET_SALESPRICE_INSERT_RESULT} from '../reducers/salesType';\r\n//**REDUX TOOLKIT */\r\n\r\nimport {setIngredient, \r\n   setInsertIngredientAction, \r\n   setIngredientError, \r\n   setIngredientEmpty,\r\n   setIngredientUpdated,\r\n   setIngredientUpdateError,\r\n   setIngredientDisable,\r\n   setIngredientDeleted,\r\n   setIngredientUpdate,\r\n   setIngredientUpdateEmpty,\r\n   setIngredientUpdateEmptyAuto} from '../reducers/ingredientSliceReducerToolkit'\r\nimport {setToken, setErrorAuth, setErrorRegister, setErrorAuthEmpty,setErrorRegisterEmpty} from '../reducers/authSliceReducerToolkit'\r\n\r\n//** */\r\n\r\n\r\n//**REDUX TOOLKIT */\r\n\r\n\r\nexport const autoReadingIngredients=()=>dispatch=>{\r\n   console.log('IN AUTO READING INGREDIENTS')\r\n\r\n\r\nconst headers={\r\n        'Content-type':'application/json',\r\n          'authorization':localStorage.getItem('token')\r\n       }\r\n   \r\n          axios.get(\"/api/ingredient\",{\r\n            headers:headers\r\n          }).then(response=>{\r\n\r\n            console.log('IN SET INGREDIENT')\r\n             \r\n            dispatch(setIngredient(response.data.result))\r\n            dispatch(setErrorAuth(undefined))\r\n            dispatch(setIngredientUpdateEmptyAuto())\r\n            \r\n          }\r\n            )\r\n          .catch(error=>dispatch(setIngredientError(error.response.data)))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n//** */\r\n\r\n// export const autoReadingIngredients=()=>dispatch=>{\r\n\r\n//    const headers={\r\n//       'Content-type':'application/json',\r\n//       'authorization':localStorage.getItem('token')\r\n//    }\r\n\r\n//       axios.get(\"/api/ingredient\",{\r\n//          headers:headers\r\n//       }).then(response=>dispatch({type:SET_INGREDIENT, payload:response.data.result}))\r\n//       .catch(error=>dispatch({type:SET_INGREDIENT_ERROR, payload:error.response.data}))\r\n// }\r\n\r\nexport const registerEmpty=()=>dispatch=>{\r\n\r\n      dispatch(setErrorRegisterEmpty({error:undefined}))\r\n\r\n}\r\n\r\nexport const loginEmpty=()=>dispatch=>{\r\n\r\n   dispatch(setErrorAuthEmpty({error:undefined}))\r\n\r\n\r\n}\r\n\r\n\r\nexport const register=(values,history)=> (dispatch)=>{\r\n\r\n\r\n   axios.post(\"/api/user\", values)\r\n   .then((res)=>{\r\n\r\n      dispatch(setErrorAuthEmpty({error:undefined}))\r\n      dispatch(setErrorRegisterEmpty({error:undefined}))\r\n      console.log('RES',res)\r\n      history.push(\"/success\")\r\n\r\n   \r\n   })\r\n   .catch(error=>{\r\n      console.log('ERROR',error.response)\r\n      dispatch(setErrorRegister(error.response.data))\r\n   \r\n   })\r\n \r\n   \r\n}\r\n\r\n// export const login=(values,history)=>dispatch=>{\r\n\r\n\r\n//    axios.post(\"/api/login\",values).then(response=>{\r\n//       localStorage.setItem('token',response.data.token)\r\n//       dispatch({type:SET_TOKEN, payload:response.data.token})\r\n//       history.push(\"/administrationpage\")\r\n//    }).catch(error=>dispatch({type:SET_ERROR, payload:error.response.data}))\r\n// }\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nexport const login=(values,history)=>dispatch=>{\r\n\r\n\r\n   axios.post(\"/api/login\",values).then(response=>{\r\n      localStorage.setItem('token',response.data.token)\r\n      dispatch(setToken(response.data.token))\r\n\r\n      dispatch(setErrorAuthEmpty({error:undefined}))\r\n      dispatch(setErrorRegisterEmpty({error:undefined}))\r\n      dispatch(setIngredientError(undefined))\r\n      history.push(\"/administrationpage\")\r\n   }).catch(error=>{\r\n      console.log('errorrr',error.response.data)\r\n      dispatch(setErrorAuth(error.response.data))\r\n   \r\n   })\r\n   \r\n}\r\n\r\n//**REDUX TOOLKIT */\r\n\r\n\r\n// export const logout=()=>dispatch=>{\r\n\r\n//    localStorage.removeItem('token')\r\n\r\n//    dispatch({type:SET_TOKEN})\r\n//    dispatch({type:SET_SALESPRICE_INSERT_RESULT, payload:[]})\r\n \r\n// }\r\n\r\n//** */\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nexport const logout=()=>dispatch=>{\r\n\r\n   localStorage.removeItem('token')\r\n\r\n   dispatch(setToken())\r\n   dispatch(setIngredientError(undefined))\r\n   dispatch({type:SET_SALESPRICE_INSERT_RESULT, payload:[]})\r\n \r\n}\r\n\r\n//** */\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nexport const autoLogin=()=>dispatch=>{\r\n\r\n  \r\n\r\n   \r\n   if(localStorage.getItem('token')){\r\n\r\n   const headers={\r\n      'Content-type':'application/json',\r\n      'authorization':localStorage.getItem('token')\r\n   }\r\n\r\n   axios.get(\"/api/user\",{\r\n      headers:headers\r\n   }).then(()=>dispatch(setToken(localStorage.getItem('token'))))\r\n   .catch(error=>{\r\n      \r\n      localStorage.removeItem('token')})\r\n}\r\n\r\n}\r\n\r\n//** */\r\n\r\n// export const autoLogin=()=>dispatch=>{\r\n\r\n   \r\n//    if(localStorage.getItem('token')){\r\n\r\n//    const headers={\r\n//       'Content-type':'application/json',\r\n//       'authorization':localStorage.getItem('token')\r\n//    }\r\n\r\n//    axios.get(\"/api/user\",{\r\n//       headers:headers\r\n//    }).then(()=>dispatch({type:SET_TOKEN, payload:localStorage.getItem('token')}))\r\n//    .catch(error=>{\r\n      \r\n//       localStorage.removeItem('token')})\r\n// }\r\n\r\n// }\r\n\r\n// export const insertIngredient=(value)=>dispatch=>{\r\n\r\n   \r\n//    const headers= {\r\n//       'Content-type':'application/json',\r\n//       'authorization':localStorage.getItem('token')\r\n//    }\r\n\r\n//    axios.post(\"/api/ingredient\", {\r\n//    headers:headers,\r\n//    body:value})\r\n//    .then((response)=>{\r\n      \r\n//       dispatch({type:SET_INGREDIENT, payload:response.data.ingredients})\r\n//       dispatch({type:SET_INGREDIENT_EMPTY, payload:''})\r\n//       dispatch({type:SET_INGREDIENT_ERROR, payload:''})\r\n//    })\r\n//    .catch(error=>dispatch({type:SET_INGREDIENT_ERROR, payload:error.response.data}))\r\n\r\n// }\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nexport const insertIngredient=(value)=>dispatch=>{\r\n\r\n   \r\n\r\n\r\n      if(value===''){\r\n        \r\n         return dispatch(setIngredientError({error:'Please insert an ingredient'}))\r\n      }\r\n\r\n     \r\n\r\n   \r\n   const headers= {\r\n      'Content-type':'application/json',\r\n      'authorization':localStorage.getItem('token')\r\n   }\r\n\r\n   axios.post(\"/api/ingredient\", {\r\n   headers:headers,\r\n   body:value})\r\n   .then((response)=>{\r\n      \r\n      dispatch(setIngredient(response.data.ingredients))\r\n      dispatch(setIngredientEmpty(''))\r\n      dispatch(setIngredientError(''))\r\n   })\r\n   .catch(error=>dispatch(setIngredientError(error.response.data)))\r\n\r\n}\r\n\r\n\r\n//** */\r\n\r\n// export const insertIngredientAction=(value)=>dispatch=>{\r\n\r\n   \r\n\r\n//    dispatch({type:SET_INGREDIENT_INSERT, payload:value})\r\n// }\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nexport const insertIngredientAction=value=>dispatch=>{\r\n\r\n   dispatch(setInsertIngredientAction(value))\r\n\r\n}\r\n\r\n//** */\r\n\r\n\r\n// export const deleteIngredient=(value)=>dispatch=>{\r\n\r\n\r\n\r\n//    const headers={\r\n//       'Content-type':'application/json',\r\n//       'authorization':localStorage.getItem('token')\r\n//    }\r\n\r\n//    const data={\r\n//       source:value\r\n//    }\r\n\r\n//    axios.delete(`/api/ingredient/${value}`,{\r\n//       headers:headers\r\n//    }).then(response=>{\r\n//       console.log('DELETE AXIOS',response)\r\n//       dispatch({type:SET_INGREDIENT_DELETED, payload:response.data.deletedIngredient})\r\n\r\n//    }\r\n//       )\r\n//    .catch(error=>console.log(error.response.data))\r\n// }\r\n\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nexport const deleteIngredient=(id)=>dispatch=>{\r\n\r\n\r\n\r\n   const headers={\r\n      'Content-type':'application/json',\r\n      'authorization':localStorage.getItem('token')\r\n   }\r\n\r\n   const data={\r\n      source:id\r\n   }\r\n\r\n   axios.delete(`/api/ingredient/${id}`,{\r\n      headers:headers\r\n   }).then(response=>{\r\n      \r\n      dispatch(setIngredientDeleted({name:response.data.deletedIngredient.name}))\r\n      dispatch(setIngredientUpdateEmpty({ingredientUpdateId:id}))\r\n   }\r\n      )\r\n   .catch(error=>{\r\n     console.log('error',error)\r\n      dispatch(setIngredientUpdateError({error:error.response.data.error, id:id}))\r\n      \r\n   }\r\n      )\r\n}\r\n\r\n\r\n//** */\r\n\r\n// export const updateEnableIngredient=(value)=>dispatch=>{\r\n\r\n\r\n//    console.log('VALUE UPDATE', value)\r\n//    dispatch({type:SET_INGREDIENT_DISABLE, payload:value})\r\n//    dispatch({type:SET_UPDATE_ERROR, payload:''})\r\n\r\n\r\n// }\r\n\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nexport const updateEnableIngredient=(value)=>dispatch=>{\r\n\r\n\r\n   \r\n   dispatch(setIngredientDisable(value))\r\n   dispatch(setIngredientUpdateError({error:'',value}))\r\n\r\n\r\n}\r\n\r\nexport const changeUpdateIngredient=(value,id)=>dispatch=>{\r\n\r\n   dispatch(setIngredientUpdate({ingredientUpdateId:id,newValue:value}))\r\n\r\n\r\n}\r\n\r\n\r\n//** */\r\n\r\n// export const saveIngredientUpdated=(id,newValue)=>dispatch=>{\r\n\r\n//    const headers={\r\n//       'Content-type':'application/json',\r\n//       'authorization':localStorage.getItem('token')\r\n//    }\r\n\r\n//    console.log('value saving',id,newValue)\r\n\r\n//    axios.put(`/api/ingredient/${id}`,{\r\n//       headers:headers,\r\n//       body:newValue\r\n\r\n//    }).then(response=>{\r\n      \r\n//       dispatch({type:SET_INGREDIENT_UPDATE, payload:{...response.data.updatedIngredient,newValue}})\r\n//       dispatch({type:SET_UPDATE_ERROR, payload:''})\r\n//       }\r\n//       )\r\n//    .catch(error=>dispatch({type:SET_UPDATE_ERROR, payload:error.response.data.result}))\r\n\r\n// }\r\n\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nexport const saveIngredientUpdated=(id,newValue)=>dispatch=>{\r\n\r\n   console.log('NEWVALUE',newValue)\r\n\r\n   newValue.map(ingrUp=>{\r\n      if(ingrUp.id===id){\r\n         console.log('INSIDE IF',id)\r\n      if(ingrUp.newValue===undefined || ingrUp.newValue===''){\r\n            console.log('undefindeddddd',ingrUp.newValue)\r\n         return dispatch(setIngredientUpdateError({errorUpdate:'Please insert an ingredient to update',id:id}))\r\n      }else{\r\n         console.log('inside else',ingrUp.newValue)\r\n\r\n         const headers={\r\n            'Content-type':'application/json',\r\n            'authorization':localStorage.getItem('token')\r\n         }\r\n      \r\n        \r\n      \r\n         axios.put(`/api/ingredient/${id}`,{\r\n            headers:headers,\r\n            body:ingrUp.newValue\r\n      \r\n         }).then(response=>{\r\n      \r\n           console.log('INSIED RESPONSE',response)\r\n            \r\n      dispatch(setIngredientUpdated({ingredientUpdated:response.data.updatedIngredient,newValue:ingrUp.newValue}))\r\n      dispatch(setIngredientUpdateEmpty({ingredientUpdateId:id}))\r\n              // dispatch(setIngredientUpdateError({error:'',value}))\r\n         })\r\n         .catch(error=>{ \r\n            console.log('IN CATCH') \r\n            return dispatch(setIngredientUpdateError({errorUpdate:error.response.data.error,id:id}))\r\n      })\r\n\r\n\r\n      }\r\n   }\r\n      return ingrUp\r\n\r\n   })\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport const selectToken=(state)=>state.auth.token;\r\nexport const selectIngredient=(state)=>state.ingredient\r\nexport const selectErrorAuth=(state)=>state.auth.errorsAuth;\r\nexport const selectErrorReg=(state)=>state.auth.errorsReg;\r\n\r\n\r\n//** */\r\n","export const SET_SALESCAKE='SET_SALESCAKE';\r\nexport const SET_ERROR_SALES='SET_ERROR_SALES';\r\nexport const SET_SALESCAKE_DELETE='SET_SALESCAKE_DELETE';\r\nexport const SET_SALESCAKE_PRICE='SET_SALESCAKE_PRICE';\r\nexport const SET_SALESCAKE_PRICE_ENABLE='SET_SALESCAKE_PRICE_ENABLE';\r\nexport const SET_SALESCAKE_ELEMENT_ERROR='SET_SALESCAKE_ELEMENT_ERROR';\r\nexport const SET_SALESPRICE_ELEMENT='SET_SALESPRICE_ELEMENT';\r\nexport const SET_SALESPRICE_INSERT_RESULT='SET_SALESPRICE_INSERT_RESULT';","import React,{useState,useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../redux/actions/index';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {selectErrorAuth, login, loginEmpty} from '../redux/actions/index';\r\n\r\n\r\n\r\n// function Login(props){\r\n\r\n//     const[userData,setUserData]=useState({email:'',password:''})\r\n\r\n//     function changeData(e){\r\n        \r\n//         setUserData({...userData, [e.target.name]:e.target.value})\r\n//     }\r\n\r\n//     function login(e){\r\n//         e.preventDefault()\r\n\r\n//         props.login(userData,props.history)\r\n\r\n//     }\r\n\r\n\r\n//     return(\r\n//         <div>\r\n//         <form onSubmit={login}>\r\n//             <h1>Login</h1>\r\n//             <div className=\"form-group\">\r\n//     <label>Email address</label>\r\n//     <input type=\"email\" className=\"form-control\" \r\n//     name=\"email\" placeholder=\"Email\" value={userData.email} onChange={changeData}>\r\n//         </input>\r\n//     </div>\r\n//     <div className=\"form-group\">\r\n//     <label >Password</label>\r\n//     <input type=\"password\" className=\"form-control\" \r\n//     name=\"password\" placeholder=\"Password\" value={userData.password} onChange={changeData}>\r\n//         </input>\r\n//   </div>\r\n  \r\n//   <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n  \r\n// </form>\r\n\r\n// <div>\r\n//     <p>{props.error? props.error.error:null}</p>\r\n// </div>\r\n// </div>\r\n\r\n\r\n//     )\r\n\r\n// }\r\n\r\n// function mapStateToProps(state){\r\n\r\n//     console.log(state.auth.errors)\r\n//     return{\r\n//         error:state.auth.errors\r\n//     }\r\n// }\r\n\r\n\r\n\r\n// export default connect(mapStateToProps,actions)(Login);\r\n\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nfunction Login(props){\r\n\r\n    const dispatch=useDispatch()\r\n\r\n    const error=useSelector(selectErrorAuth)\r\n\r\n    useEffect(()=>{\r\n\r\n        dispatch(loginEmpty())\r\n\r\n    }, [])\r\n\r\n    const[userData,setUserData]=useState({email:'',password:''})\r\n\r\n    function changeData(e){\r\n        \r\n        setUserData({...userData, [e.target.name]:e.target.value})\r\n    }\r\n\r\n    function loginAction(e){\r\n        e.preventDefault()\r\n\r\n        dispatch(login(userData,props.history))\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n        <form onSubmit={loginAction}>\r\n            <h1>Login</h1>\r\n            <div className=\"form-group\">\r\n    <label>Email address</label>\r\n    <input type=\"email\" className=\"form-control\" \r\n    name=\"email\" placeholder=\"Email\" value={userData.email} onChange={changeData}>\r\n        </input>\r\n    </div>\r\n    <div className=\"form-group\">\r\n    <label >Password</label>\r\n    <input type=\"password\" className=\"form-control\" \r\n    name=\"password\" placeholder=\"Password\" value={userData.password} onChange={changeData}>\r\n        </input>\r\n  </div>\r\n  \r\n  <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n  \r\n</form>\r\n\r\n<div>\r\n    <p>{error ? error:null}</p>\r\n</div>\r\n</div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(null,actions)(Login);\r\n\r\n//** */","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nfunction RegisterSuccess(){\r\n\r\n\r\n    return(\r\n        <div>\r\n\r\n        <h3>Your registration is ok, please click above on login button in order to login with your user</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterSuccess;","import React,{useState, useEffect} from 'react';\r\nimport * as actions from '../redux/actions/index';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, Route} from 'react-router-dom';\r\nimport RegisterSuccess from './RegisterSuccess';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {selectErrorReg,\r\n        register,\r\n        registerEmpty} from '../redux/actions/index'\r\n\r\n\r\n// function Register(props){\r\n\r\n//     const dispatch=useDispatch()\r\n//     const error=useSelector(selectError)\r\n\r\n\r\n//     const [userData,setUserData]=useState({email:'',password:''})\r\n\r\n//     function changeData(e){\r\n//         setUserData({...userData, [e.target.name]:e.target.value})\r\n\r\n//     }\r\n\r\n//     function registerUser(e){\r\n//         e.preventDefault()\r\n//         dispatch(register(userData,props.history))\r\n//     }\r\n\r\n\r\n\r\n//     return(\r\n\r\n//         <div>\r\n            \r\n//         <form onSubmit={registerUser}>\r\n//             <h1>Registrati</h1>\r\n//             <div className=\"form-group\">\r\n//     <label>Email address</label>\r\n//     <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email\"\r\n//     value={userData.email} onChange={changeData}/>\r\n        \r\n//     </div>\r\n//     <div className=\"form-group\">\r\n//     <label >Password</label>\r\n//     <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Password\"\r\n//     value={userData.password} onChange={changeData}/>\r\n        \r\n//   </div>\r\n  \r\n//   <button type=\"submit\" className=\"btn btn-primary\" >Submit</button>\r\n  \r\n// </form>\r\n// <div>\r\n\r\n// <p>{ props.error?.error }</p>\r\n\r\n    \r\n\r\n\r\n// </div>\r\n// </div>\r\n\r\n\r\n//     )\r\n// }\r\n\r\n// function mapStateToProps(state){\r\n//     return{\r\n//         error:state.auth.errors\r\n//     }\r\n// }\r\n\r\n\r\n// export default connect(mapStateToProps,actions)(withRouter(Register));\r\n\r\n\r\nfunction Register(props){\r\n\r\n    const dispatch=useDispatch()\r\n    const error=useSelector(selectErrorReg)\r\n\r\n    useEffect(()=>{\r\n\r\n        dispatch(registerEmpty())\r\n    \r\n    \r\n    }, [])\r\n\r\n\r\n    const [userData,setUserData]=useState({email:'',password:''})\r\n\r\n    function changeData(e){\r\n        setUserData({...userData, [e.target.name]:e.target.value})\r\n\r\n    }\r\n\r\n    function registerUser(e){\r\n        e.preventDefault()\r\n        dispatch(register(userData,props.history))\r\n    }\r\n\r\n\r\n\r\n    return(\r\n\r\n        <div>\r\n            \r\n        <form onSubmit={registerUser}>\r\n            <h1>Registrati</h1>\r\n            <div className=\"form-group\">\r\n    <label>Email address</label>\r\n    <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email\"\r\n    value={userData.email} onChange={changeData}/>\r\n        \r\n    </div>\r\n    <div className=\"form-group\">\r\n    <label >Password</label>\r\n    <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Password\"\r\n    value={userData.password} onChange={changeData}/>\r\n    \r\n        \r\n  </div>\r\n  \r\n  <button type=\"submit\" className=\"btn btn-primary\" >Submit</button>\r\n  \r\n</form>\r\n<div>\r\n\r\n<p>{error ? error : null}</p>\r\n\r\n    \r\n\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default withRouter(Register);","import {createSlice} from '@reduxjs/toolkit'\r\n\r\n\r\nconsole.log('HOMESLICE')\r\n\r\nconst homeSlice=createSlice({\r\n    name:'homeSlice',\r\n    initialState:{\r\n        home:[]\r\n    },\r\n    reducers:{\r\n\r\n        setHomeSales(state,action){\r\n            const homePayload=action.payload\r\n            return{\r\n                ...state, home:homePayload.map(elem=>{\r\n\r\n                    return {\r\n                        cakeId:elem.cakeId,\r\n                        first:elem.first,\r\n                        second:elem.second,\r\n                        third:elem.third,\r\n                        listcakes:elem.listcakes,\r\n                        pubblicationDate:elem.pubblicationDate,\r\n                        disableInfo:false\r\n\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n})\r\n\r\nexport const {setHomeSales}=homeSlice.actions;\r\n\r\nexport default homeSlice.reducer","import {createSlice} from '@reduxjs/toolkit';\r\n\r\n\r\nconst saleSlice=createSlice({\r\n    name:'saleSlice',\r\n    initialState:{\r\n        sales:[],\r\n        salesPriceElement:[],\r\n        errors:undefined,\r\n        insertSales:[],\r\n        resultInsert:[]\r\n\r\n\r\n    },\r\n    reducers:{\r\n        setSalesCake(state,action){\r\n            const salesCakePayload=action.payload;\r\n            state.sales=salesCakePayload.map(sales=>{\r\n                return {\r\n                    id:sales._id,\r\n                    name:sales.name,\r\n                    imgLink:sales.imgLink,\r\n                    enableSetPrice:false\r\n                }\r\n            })\r\n\r\n        },\r\n        setErrorSales(state,action){\r\n            const salesErrorPayload=action.payload;\r\n            return {\r\n                ...state, errors:salesErrorPayload\r\n            }\r\n\r\n        },\r\n        setSalesPriceElement(state,action){\r\n\r\n            const salesPriceElementPayload=action.payload\r\n            state.salesPriceElement=salesPriceElementPayload\r\n        },\r\n        setSalesCakePriceEnable(state,action){\r\n\r\n            const salesCakePriceEnablePayload=action.payload;\r\n\r\n           if(salesCakePriceEnablePayload.checked){\r\n               state.sales.map(sale=>{\r\n                   if(salesCakePriceEnablePayload.id===sale.id){\r\n                        sale.enableSetPrice=!sale.enableSetPrice\r\n                        state.insertSales.push({id:sale.id})\r\n                   }\r\n                   return sale\r\n               })\r\n           }else{\r\n               state.sales=state.sales.map(sale=>{\r\n                   if(sale.id===salesCakePriceEnablePayload.id){\r\n                       sale.enableSetPrice=!sale.enableSetPrice\r\n                       state.insertSales=state.insertSales.filter(saleIn=>saleIn.id!==salesCakePriceEnablePayload.id)\r\n                   }\r\n                   return sale\r\n               })\r\n           }\r\n\r\n\r\n        },\r\n        setSalesCakePrice(state,action){\r\n            const salesCakePricePayload=action.payload;\r\n\r\n            state.insertSales.forEach(sale=>{\r\n                if(sale.id===salesCakePricePayload.id){\r\n                    sale[salesCakePricePayload.name]=salesCakePricePayload.value\r\n                }\r\n                return sale\r\n            })\r\n\r\n        },\r\n        setSalesCakeElementError(state,action){\r\n            const salesCakeElementErrorPayload=action.payload;\r\n\r\n            state.insertSales.forEach(sale=>{\r\n                salesCakeElementErrorPayload.arrId.forEach(saleId=>{\r\n                if(sale.id===saleId){\r\n                    sale.errorFirstPrice=salesCakeElementErrorPayload.errorFirstPrice\r\n                }\r\n                return saleId\r\n\r\n            })\r\n\r\n            return sale\r\n            })\r\n\r\n\r\n        },\r\n        setSalesPriceInsertResult(state,action){\r\n\r\n           state.resultInsert=[]\r\n            const salesPriceInsertResultPayload=action.payload;\r\n            console.log('sales response',salesPriceInsertResultPayload)\r\n\r\n            \r\n\r\n            salesPriceInsertResultPayload.forEach(sale=>{\r\n                state.resultInsert.push(sale.name)\r\n\r\n            })\r\n\r\n\r\n        },\r\n        setInsertSalesEmpty(state,action){\r\n\r\n            state.insertSales=[]\r\n\r\n\r\n        },\r\n        setResultInsertEmpty(state,action){\r\n            state.resultInsert=[]\r\n\r\n\r\n        },\r\n        setCheckFalseCake(state,action){\r\n\r\n            state.sales.forEach(sale=>{\r\n\r\n                if(sale.enableSetPrice){\r\n                    sale.enableSetPrice=false\r\n                }\r\n                return sale\r\n\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n})\r\n\r\nexport const {setSalesCake}=saleSlice.actions;\r\nexport const {setErrorSales}=saleSlice.actions;\r\nexport const {setSalesPriceElement}=saleSlice.actions;\r\nexport const {setSalesCakePriceEnable}=saleSlice.actions;\r\nexport const {setSalesCakePrice}=saleSlice.actions;\r\nexport const {setSalesCakeElementError}=saleSlice.actions;\r\nexport const {setSalesPriceInsertResult}=saleSlice.actions;\r\nexport const {setInsertSalesEmpty}=saleSlice.actions;\r\nexport const {setCheckFalseCake}=saleSlice.actions;\r\nexport const {setResultInsertEmpty}=saleSlice.actions;\r\n\r\n\r\nexport default saleSlice.reducer;","import {SET_ERROR_SALES, \r\n    SET_SALESCAKE,\r\n    SET_SALESCAKE_PRICE, \r\n    SET_SALESCAKE_PRICE_ENABLE,\r\n    SET_SALESCAKE_ELEMENT_ERROR,\r\n    SET_SALESPRICE_ELEMENT,\r\n    SET_SALESPRICE_INSERT_RESULT} from '../reducers/salesType'\r\nimport {SET_HOME_SALES,SET_SALESINFO_DISABLE} from '../reducers/homeType'\r\nimport axios from 'axios';\r\nimport { SET_CAKE } from '../reducers/cakeType';\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nimport {useDispatch} from 'react-redux';\r\nimport {setHomeSales} from '../reducers/homeSliceReducerToolkit'\r\nimport {setSalesCake,\r\n        setErrorSales,\r\n        setSalesPriceElement,\r\n        setSalesCakePriceEnable,\r\n        setSalesCakePrice,\r\n        setSalesCakeElementError,\r\n        setSalesPriceInsertResult,\r\n        setInsertSalesEmpty,\r\n        setCheckFalseCake,\r\n        setResultInsertEmpty} from '../reducers/saleSliceReducerToolkit';\r\n\r\n\r\n\r\n//** */\r\n\r\n\r\n\r\n\r\n// export const autoReadingSales=()=>dispatch=>{\r\n\r\n//     const headers={\r\n//         'Content-type':'application/json',\r\n//         'authorization': localStorage.getItem('token')\r\n//     }\r\n    \r\n//     axios.get(\"/api/cake\",{\r\n//         headers:headers\r\n//     }).then(response=>{\r\n//         console.log('in response sales',response)\r\n//     dispatch({type:SET_SALESCAKE, payload:response.data.result})\r\n//     dispatch({type:SET_ERROR_SALES, payload:''})\r\n//     })\r\n//     .catch(error=>{\r\n//         console.log('IN CATCH')\r\n//         dispatch({type:SET_ERROR_SALES, payload:error.response.data.result})\r\n//     })\r\n\r\n// }\r\n\r\n\r\n// export const insertSalesCakeAction=(value)=>dispatch=>{\r\n//     console.log('value data')\r\n\r\n// dispatch({type:SET_SALESCAKE_PRICE, payload:{name:value.name, price:value.value, id:value.id}})\r\n  \r\n// }\r\n\r\n// export const changeInsertPrice=(value)=>dispatch=>{\r\n\r\n// console.log('VALUE INSERT',value.checked)\r\n//     dispatch({type:SET_SALESCAKE_PRICE_ENABLE, payload:value})\r\n// }\r\n\r\n// export const insertCakeInSales=(value)=>dispatch=>{\r\n\r\n//         console.log('value',value)\r\n\r\n//         let arr=[]\r\n\r\n//     value.map(val=>{\r\n//         console.log('vali in map', val)\r\n//         if(val.first===undefined || val.first===\"\"){\r\n//             arr.push(val.name)\r\n//         }\r\n\r\n//         return val\r\n\r\n//     })\r\n\r\n//     if(arr[0]!==undefined){\r\n       \r\n        \r\n\r\n//         return    dispatch({type: SET_SALESCAKE_ELEMENT_ERROR, \r\n//                 payload:{name:arr, error:'You have to insert at least a first price'}})\r\n\r\n        \r\n//     }\r\n\r\n//     console.log('OUT OF IF STATEMENT')\r\n\r\n//     const headers={\r\n//         'Content-type':'application/json',\r\n//         'authorization':localStorage.getItem('token')\r\n//     }\r\n\r\n//     axios.post(\"/api/salespricelist\",{\r\n//         headers:headers,\r\n//         body:value\r\n//     }).then(response=>{\r\n//             console.log('RESPOSNE RESULT SALESPRICE ELEMENT',response)\r\n//         dispatch({type:SET_SALESPRICE_INSERT_RESULT, payload:response.data.result})\r\n//         dispatch({type:SET_SALESPRICE_ELEMENT, payload:response.data.sales})\r\n        \r\n//     })\r\n//     .catch(error=>console.log('error sales',error.response))\r\n\r\n\r\n// }\r\n\r\n// export const autoReadingSalesPrice=()=>dispatch=>{\r\n\r\n//     const headers={\r\n//         'Content-type':'application/json',\r\n//         'authorization':localStorage.getItem('token')\r\n//     }\r\n\r\n//     axios.get(\"/api/salespricelist\",{\r\n//         headers:headers\r\n//     }).then(response=>{\r\n//         console.log('response sales price',response.data.sales)\r\n//         dispatch({type:SET_SALESPRICE_ELEMENT, payload:response.data.sales})\r\n        \r\n//     })\r\n//     .catch(error=>console.log('ERROR RESOPNSE',error))\r\n// }\r\n\r\n// // export const autoReadingSalesHome=()=>dispatch=>{\r\n\r\n\r\n// //     axios.get(\"/reading/saleshome\").then(response=>dispatch({type:SET_HOME_SALES, payload:response.data.sales}))\r\n// //     .catch(error=>console.log('ERROR IN RESPONSE',error.response.data))\r\n// // }\r\n\r\n// //**REDUX TOOLKIT */\r\n\r\n// export const autoReadingSalesHome=()=>dispatch=>{\r\n\r\n//     console.log('AUTOREADINGSALES HOME')\r\n\r\n    \r\n    \r\n\r\n\r\n//     axios.get(\"/reading/saleshome\").then(response=>dispatch(setHomeSales(response.data.sales)))\r\n\r\n// }\r\n\r\n// //** */\r\n\r\n// export const setDisableInfo=(value)=>dispatch=>{\r\n\r\n\r\n//     dispatch({type:SET_SALESINFO_DISABLE, payload:value})\r\n\r\n// }\r\n\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nexport const autoReadingSales=()=>dispatch=>{\r\n\r\n    const headers={\r\n        'Content-type':'application/json',\r\n        'authorization': localStorage.getItem('token')\r\n    }\r\n    \r\n    axios.get(\"/api/cake\",{\r\n        headers:headers\r\n    }).then(response=>{\r\n        console.log('in response sales',response)\r\n    dispatch(setSalesCake(response.data.result))\r\n    dispatch(setInsertSalesEmpty())\r\n    dispatch(setResultInsertEmpty())\r\n    dispatch(setErrorSales({error:''}))\r\n    })\r\n    .catch(error=>{\r\n        console.log('IN CATCH')\r\n        dispatch(setErrorSales(error.response.data.result))\r\n    })\r\n\r\n}\r\n\r\n\r\nexport const insertSalesCakeAction=(id,value,name)=>dispatch=>{\r\n    console.log('value data')\r\n\r\ndispatch(setSalesCakePrice({id:id, name:name, value:value}))\r\n  \r\n}\r\n\r\nexport const changeInsertPrice=(checked,id)=>dispatch=>{\r\n\r\nconsole.log('VALUE INSERT',checked)\r\n    dispatch(setSalesCakePriceEnable({checked:checked,id:id}))\r\n}\r\n\r\nexport const insertCakeInSales=(insertSales)=>dispatch=>{\r\n\r\n    console.log('INSERTSALES',insertSales)\r\n\r\n        let arr=[]\r\n\r\n    insertSales.map(val=>{\r\n        console.log('vali in map', val)\r\n        if(val.first===undefined || val.first===\"\"){\r\n            console.log('INSIDE IF SALES',val.first)\r\n            arr.push(val.id)\r\n           \r\n        }\r\n\r\n        return val\r\n\r\n    })\r\n\r\n    if(arr[0]!==undefined){\r\n\r\n        console.log('ARR',arr)\r\n        return dispatch(setSalesCakeElementError({arrId:arr,errorFirstPrice:'You have to insert at least a first price'}))\r\n    }else{\r\n\r\n\r\n\r\n    console.log('OUT OF IF STATEMENT')\r\n\r\n    const headers={\r\n        'Content-type':'application/json',\r\n        'authorization':localStorage.getItem('token')\r\n    }\r\n\r\n    axios.post(\"/api/salespricelist\",{\r\n        headers:headers,\r\n        body:insertSales\r\n    }).then(response=>{\r\n            console.log('RESPOSNE RESULT SALESPRICE ELEMENT',response)\r\n        dispatch(setSalesPriceInsertResult(response.data.result))\r\n        dispatch(setSalesPriceElement(response.data.sales))\r\n        dispatch(setCheckFalseCake(false))\r\n        dispatch(setInsertSalesEmpty())\r\n        \r\n    })\r\n    .catch(error=>console.log('error sales',error.response))\r\n\r\n}\r\n\r\n}\r\n\r\nexport const autoReadingSalesPrice=()=>dispatch=>{\r\n\r\n    const headers={\r\n        'Content-type':'application/json',\r\n        'authorization':localStorage.getItem('token')\r\n    }\r\n\r\n    axios.get(\"/api/salespricelist\",{\r\n        headers:headers\r\n    }).then(response=>{\r\n        console.log('response sales price',response.data.sales)\r\n        dispatch(setSalesPriceElement(response.data.sales))\r\n        \r\n    })\r\n    .catch(error=>console.log('ERROR RESOPNSE',error))\r\n}\r\n\r\n\r\nexport const autoReadingSalesHome=()=>dispatch=>{\r\n\r\n    console.log('AUTOREADINGSALES HOME')\r\n\r\n    \r\n    \r\n\r\n\r\n    axios.get(\"/reading/saleshome\").then(response=>dispatch(setHomeSales(response.data.sales)))\r\n\r\n}\r\n\r\n//** */\r\n\r\nexport const setDisableInfo=(value)=>dispatch=>{\r\n\r\n\r\n    dispatch({type:SET_SALESINFO_DISABLE, payload:value})\r\n\r\n}\r\n\r\n\r\nexport const selectSale=(state)=>state.sale;\r\n\r\n//** */","export const SET_HOME_SALES='SET_HOME_SALES';\r\nexport const SET_SALESINFO_DISABLE='SET_SALESINFO_DISABLE';","import React, { useEffect } from 'react';\r\nimport * as actions from '../redux/actions/indexSales';\r\nimport {connect} from 'react-redux';\r\nimport './home.css';\r\n\r\n//**REDUX TOOLKIT */\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\n//** */\r\n\r\n\r\n\r\nfunction Home(props){\r\n\r\n    //**REDUX TOOLKIT */\r\n\r\n    const home=useSelector((state)=>{\r\n\r\n        return (\r\n            state.home.home\r\n        )\r\n    })\r\n\r\n    console.log('HOME',home)\r\n\r\n    //** */\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n       // props.autoReadingSalesHome()\r\n\r\n        //**REDUX TOOLKIT */\r\n\r\n        props.autoReadingSalesHome()\r\n\r\n        //** */\r\n\r\n    },[])\r\n\r\nfunction changeDisable(e){\r\n    console.log(e.target.alt)\r\n    props.setDisableInfo(e.target.alt)\r\n}\r\n\r\n    // function renderSales(){\r\n    //     return props.home.map(elem=>{\r\n    //         return(\r\n    //             <div className=\"element-sales\" key={elem.cakeId}>\r\n    //                     <img src={elem.listcakes[0].imgLink}\r\n    //                     width=\"150\"\r\n    //                     height=\"150\"\r\n    //                     alt={elem.listcakes[0].name}\r\n    //                     onClick={(e)=>changeDisable(e)}\r\n    //                     /><br/>\r\n    //                     <span className=\"elem-name\"><b>{elem.listcakes[0].name}</b>\r\n    //                     </span><span className=\"elem-weight\">{elem.listcakes[0].weight}</span><br/>\r\n                        \r\n    //                     {elem.disableInfo ? \r\n    //                         <div>\r\n    //                         <ul>\r\n    //                             <li key={elem.first}>{elem.first} Euro</li>\r\n    //                             <li key={elem.second}>{elem.second} Euro</li>\r\n    //                             <li key={elem.third}>{elem.third} Euro</li>\r\n    //                         </ul>\r\n    //                         <span>Ingredients</span>\r\n    //                         <ul>\r\n    //                             {elem.listcakes[0].ingredients.map(ingredient=>{\r\n    //                                 return (\r\n    //                                     <li key={ingredient}>{ingredient}</li>\r\n    //                                 )\r\n    //                             })}\r\n    //                         </ul>\r\n    //                         </div>\r\n                            \r\n    //                      :\r\n    //                      null   \r\n    //                     }\r\n    //                     </div>\r\n                        \r\n                \r\n    //         )\r\n    //     })\r\n\r\n\r\n    // }\r\n\r\n    //**REDUX TOOLKIT */\r\n\r\n    function renderSales(){\r\n        return home.map(elem=>{\r\n            return(\r\n                <div className=\"element-sales\" key={elem.cakeId}>\r\n                        <img src={elem.listcakes[0].imgLink}\r\n                        width=\"150\"\r\n                        height=\"150\"\r\n                        alt={elem.listcakes[0].name}\r\n                        onClick={(e)=>changeDisable(e)}\r\n                        /><br/>\r\n                        <span className=\"elem-name\"><b>{elem.listcakes[0].name}</b>\r\n                        </span><span className=\"elem-weight\">{elem.listcakes[0].weight}</span><br/>\r\n                        \r\n                        {elem.disableInfo ? \r\n                            <div>\r\n                            <ul>\r\n                                <li key={elem.first}>{elem.first} Euro</li>\r\n                                <li key={elem.second}>{elem.second} Euro</li>\r\n                                <li key={elem.third}>{elem.third} Euro</li>\r\n                            </ul>\r\n                            <span>Ingredients</span>\r\n                            <ul>\r\n                                {elem.listcakes[0].ingredients.map(ingredient=>{\r\n                                    return (\r\n                                        <li key={ingredient}>{ingredient}</li>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                            </div>\r\n                            \r\n                         :\r\n                         null   \r\n                        }\r\n                        </div>\r\n                        \r\n                \r\n            )\r\n        })\r\n\r\n\r\n    }\r\n\r\n  //** */\r\n\r\n\r\n    return(\r\n        \r\n        <div>\r\n            <h1>This is home</h1>\r\n            \r\n            <div>\r\n            {renderSales()}\r\n            </div>\r\n            </div>\r\n            \r\n        \r\n    )\r\n}\r\n\r\n// function mapStateToProps(state){\r\n//     console.log('state home',state)\r\n//     return{\r\n//         home:state.home.home\r\n//     }\r\n// }\r\n\r\n\r\n\r\n//export default connect(mapStateToProps,actions)(Home);\r\n\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nexport default connect(null,actions)(Home);\r\n\r\n//** */","import React from 'react';\r\nimport Login from '../Access/Login';\r\nimport Register from '../Access/Register';\r\nimport {Route, Switch, Redirect} from 'react-router-dom'\r\nimport App from '../App';\r\nimport RegisterSuccess from '../Access/RegisterSuccess';\r\nimport Home from '../Access/Home';\r\n\r\n\r\nfunction PublicRoute(){\r\n\r\n    console.log('PUBLICROUTE')\r\n\r\n    return(\r\n        <div>\r\n            <Switch>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route exact path=\"/register\" component={Register}/>\r\n            <Route exact path=\"/login\" component={Login}/>\r\n            <Route exact path=\"/success\" component={RegisterSuccess}/>\r\n            <Redirect from=\"*\" to=\"/\"></Redirect>\r\n            </Switch>\r\n            \r\n            \r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default PublicRoute;","import React from 'react';\r\nimport cakeList from './cakeList.css';\r\n\r\n\r\n\r\nfunction CakeList(props){\r\n\r\n    function renderCakes(){\r\n        return props.cakes.map(cake=>{\r\n            return(\r\n                <div className=\"elem-cake\" key={cake.id}>\r\n\r\n                    {cake.disable ?\r\n                    <>\r\n                    <input type=\"checkbox\"\r\n                    name={cake.name}\r\n                    />\r\n                    <label className=\"cake\">\r\n                        <b>{cake.name}</b>\r\n                    </label>\r\n                        </>\r\n                    :\r\n                    \r\n                    props.cakeUpdate.map(cakeup=>{\r\n                        if(cakeup.id===cake.id){\r\n                            return(\r\n                    <>\r\n                    <input value={cakeup.newValue} type=\"text\" id={cake.id} onChange={props.changeUpdateCakeAction}/>\r\n                    <button id={cake.id} onClick={props.saveUpdateCakeAction}>Save</button>\r\n                    <div>\r\n                        <p>{cakeup.errorsUpdate ? cakeup.errorsUpdate :null}</p>\r\n                    </div>\r\n                        </>\r\n                            )\r\n                        }\r\n                    }\r\n                    )\r\n                    \r\n                    \r\n                    }\r\n\r\n                    <button id={cake.id} className=\"delete-button\" onClick={props.deleteEvent}>Delete</button>\r\n                   \r\n                    <button id={cake.id} className=\"update-button\" onClick={props.updateEvent}>Update</button>\r\n\r\n             \r\n\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            {renderCakes()}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CakeList;","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst cakeSlice=createSlice({\r\n    name:'cakeSlice',\r\n    initialState:{\r\n        cakes:[],\r\n        insertCake:{name:'',weight:'',imgLink:'', ingredients:[]},\r\n        cakeUpdate:[],\r\n        errors:undefined\r\n        \r\n    },\r\n    reducers:{\r\n            setCake(state,action){\r\n                const cakePayload=action.payload\r\n\r\n                return {\r\n                    ...state, cakes:cakePayload.map(cake=>{\r\n                        return{\r\n                            id:cake._id,\r\n                            name:cake.name,\r\n                            imgLink:cake.imgLink,\r\n                            disable:true,\r\n                            \r\n                        }\r\n                    })\r\n                }\r\n\r\n\r\n\r\n            },\r\n            setCakeInsert(state,action){\r\n\r\n                console.log('action',action.payload)\r\n                const cakeInsertPayload=action.payload\r\n                return{\r\n                    ...state, insertCake:{...state.insertCake, [cakeInsertPayload.name]:cakeInsertPayload.value}\r\n                }\r\n\r\n            },\r\n            setCakeIngredient(state,action){\r\n\r\n                console.log('SETCAKEINGREDIENT',action.payload)\r\n\r\n                const cakeIngredientInsertPayload=action.payload\r\n                return {\r\n                    ...state, insertCake:cakeIngredientInsertPayload.checked ? \r\n                    {...state.insertCake, ingredients:[...state.insertCake.ingredients, cakeIngredientInsertPayload.name]} :\r\n                     {...state.insertCake,\r\n                    ingredients: state.insertCake.ingredients.filter(elem=>elem!==cakeIngredientInsertPayload.name)}\r\n                }\r\n\r\n            },\r\n            setCakeError(state,action){\r\n\r\n                const cakeErrorPayload=action.payload;\r\n\r\n                return {\r\n                    ...state, errors:cakeErrorPayload.error\r\n                }\r\n                \r\n\r\n            },\r\n            setCakeEmpty(state,action){\r\n                const cakeEmptyPayload=action.payload\r\n\r\n                \r\n                     state.insertCake={name:cakeEmptyPayload.cakeInfo, weight:cakeEmptyPayload.cakeInfo ,imgLink:cakeEmptyPayload.cakeInfo, ingredients:[]}\r\n                \r\n\r\n            },\r\n            setCakeDeleted(state,action){\r\n                \r\n                const cakeDeletedPayload=action.payload;\r\n\r\n                return {\r\n                    ...state, cakes:state.cakes.filter(cake=>cake.name!==cakeDeletedPayload)\r\n                }\r\n            },\r\n            setCakeDisable(state,action){\r\n                const cakeDisablePayload=action.payload;\r\n\r\n                console.log('cakedisabl',cakeDisablePayload)\r\n\r\n                state.cakes.map(cake=>{\r\n                        if(cake.id===cakeDisablePayload){\r\n                            cake.disable=!cake.disable\r\n\r\n                            if(cake.disable===false){\r\n                                console.log('CAKE ID',cake.id)\r\n                            state.cakeUpdate.push({id:cake.id}) \r\n                            }else{\r\n                                console.log('state cakeupdate',state)\r\n                              state.cakeUpdate=state.cakeUpdate.filter(cakeup=>cakeup.id!==cake.id)\r\n                            }\r\n\r\n                        }\r\n                        \r\n                        return cake\r\n                    })\r\n\r\n                \r\n                \r\n            },\r\n            setCakeUpdate(state,action){\r\n                console.log('SETCAKEUPDATE',action.payload)\r\n                const cakeUpdatePayload=action.payload;\r\n                state.cakeUpdate.map(cake=>{\r\n                        if(cake.id===cakeUpdatePayload.cakeUpdateId){\r\n                            cake.newValue=cakeUpdatePayload.newValue\r\n                        }\r\n                        return cake\r\n                    })\r\n                \r\n            },\r\n            setCakeUpdatedError(state,action){\r\n\r\n                const cakeUpdateErrorPayload=action.payload\r\n\r\n                \r\n                   state.cakeUpdate.map(cake=>{\r\n                       if (cake.id===cakeUpdateErrorPayload.id){\r\n                           cake.errorsUpdate=cakeUpdateErrorPayload.error\r\n                       }\r\n\r\n                       return cake\r\n\r\n                   })\r\n                \r\n\r\n\r\n\r\n            },\r\n            setCakeUpdated(state,action){\r\n                const cakeUpdated=action.payload\r\n                console.log('SETCAKE UPDATED',cakeUpdated)\r\n\r\n                state.cakes.map(cake=>{\r\n                    if(cake.name===cakeUpdated.updatedCake){\r\n                        cake.name=cakeUpdated.newValue\r\n                        cake.disable=!cake.disable\r\n                    }\r\n                    return cake\r\n\r\n                }\r\n                )\r\n            },\r\n            setCakeUpdateEmpty(state,action){\r\n\r\n                console.log('state cakeupdateempty',state)\r\n                console.log('action empty',action.payload)\r\n                const cakeUpdateEmptyPayload=action.payload;\r\n\r\n                state.cakeUpdate=state.cakeUpdate.filter(cake=>cake.id!==cakeUpdateEmptyPayload.cakeUpdateId)\r\n\r\n\r\n            },\r\n            setCakeUpdateEmptyAuto(state,action){\r\n                state.cakeUpdate=[]\r\n            }\r\n    }\r\n\r\n})\r\n\r\nexport const {setCake}=cakeSlice.actions;\r\nexport const {setCakeInsert}=cakeSlice.actions;\r\nexport const {setCakeIngredient}=cakeSlice.actions;\r\nexport const {setCakeError}=cakeSlice.actions;\r\nexport const {setCakeEmpty}=cakeSlice.actions;\r\nexport const {setCakeDeleted}=cakeSlice.actions;\r\nexport const {setCakeDisable}=cakeSlice.actions;\r\nexport const {setCakeUpdate}=cakeSlice.actions;\r\nexport const {setCakeUpdatedError}=cakeSlice.actions;\r\nexport const {setCakeUpdated}=cakeSlice.actions;\r\nexport const {setCakeUpdateEmpty}=cakeSlice.actions;\r\nexport const {setCakeUpdateEmptyAuto}=cakeSlice.actions;\r\n\r\nexport default cakeSlice.reducer","import {SET_CAKE, \r\n    SET_CAKE_ERROR, \r\n    SET_CAKE_INSERT,\r\n    SET_CAKE_INGREDIENT, \r\n    SET_CAKE_EMPTY,\r\n    SET_CAKE_DELETED,\r\n    SET_CAKE_DISABLE,\r\n    SET_CAKE_UPDATE, SET_CAKE_UPDATED,\r\n    SET_CAKE_UPDATED_ERROR\r\n    } from '../reducers/cakeType';\r\n\r\nimport {SET_CHECK_FALSE_INGREDIENT, SET_CHECK_INGREDIENT} from '../reducers/ingredientType'\r\nimport axios from 'axios';\r\nimport { SET_SALESCAKE_DELETE } from '../reducers/salesType';\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nimport {setCake,\r\n        setCakeInsert,\r\n        setCakeIngredient,\r\n        setCakeError,\r\n        setCakeEmpty,\r\n        setCakeDeleted,\r\n        setCakeDisable,\r\n        setCakeUpdate,\r\n        setCakeUpdatedError,\r\n        setCakeUpdated,\r\n        setCakeUpdateEmpty,\r\n        setCakeUpdateEmptyAuto} from '../reducers/cakeSliceReducerToolkit';\r\nimport {setIngredient,setCheckIngredient, setCheckFalseIngredient} from '../reducers/ingredientSliceReducerToolkit';\r\nimport * as actions from './index'\r\n\r\n\r\n//** */\r\n\r\n\r\n// export const autoReadingCakes=()=>dispatch=>{\r\n\r\n//     const headers={\r\n//         'Content-type':'application/json',\r\n//         'authorization':localStorage.getItem('token')\r\n//     }\r\n\r\n//     axios.get(\"/api/cake\",{\r\n//         headers:headers\r\n//     }).then(response=>dispatch({type:SET_CAKE, payload:response.data.result}))\r\n//     .catch(error=>console.log('ERROR',error.response.data))\r\n\r\n// }\r\n\r\n// export const insertCakeAction=(value)=>dispatch=>{\r\n\r\n//     console.log(value.name)\r\n\r\n//     dispatch({type:SET_CAKE_INSERT, payload:value})\r\n    \r\n// }\r\n\r\n\r\n// export const insertCake=(value)=>dispatch=>{\r\n\r\n\r\n//     console.log('insert cake',value)\r\n\r\n//     if (value.name==='' || value.weight==='' || value.imgLink===''){\r\n//         return dispatch({type:SET_CAKE_ERROR, payload:'Please fill all fields'})\r\n//     }\r\n\r\n//     if(value.ingredients.length===0){\r\n//         return dispatch({type:SET_CAKE_ERROR, payload:'Please insert at least one ingredient'})\r\n//     }\r\n\r\n\r\n//     const headers={\r\n//         'Content-type':'application/json',\r\n//         'authorization':localStorage.getItem('token')\r\n//     }\r\n\r\n//     axios.post(\"/api/cake\",{\r\n//         headers:headers,\r\n//         body:value\r\n//     }).then(response=>{\r\n//         console.log('RESPONSE CAKE',response)\r\n//         dispatch({type:SET_CAKE, payload:response.data.result})\r\n//         dispatch({type:SET_CAKE_EMPTY, payload:''})\r\n//         dispatch({type:SET_CAKE_ERROR, payload:''})\r\n//         dispatch({type:SET_CHECK_FALSE_INGREDIENT, payload:false})\r\n//     })\r\n//     .catch(error=>dispatch({type:SET_CAKE_ERROR, payload:error.response.data.result}))\r\n\r\n    \r\n// }\r\n\r\n// export const insertIngredientCake=(name,checked)=>dispatch=>{\r\n\r\n    \r\n\r\n//     let obj={name:name, checked:checked}\r\n\r\n//     dispatch({type:SET_CAKE_INGREDIENT, payload:obj})\r\n//     dispatch({type:SET_CHECK_INGREDIENT, payload:obj})\r\n// }\r\n\r\n\r\n// export const deleteCake=(id)=>dispatch=>{\r\n\r\n//     const headers={\r\n//         'Content-type':'application/json',\r\n//         'authorization':localStorage.getItem('token')\r\n//     }\r\n\r\n//     axios.delete(`/api/cake/${id}`,{\r\n//         headers:headers\r\n//     }).then(response=>{\r\n\r\n//         dispatch({type:SET_CAKE_DELETED, payload:response.data.deletedCake})\r\n//         dispatch({type:SET_SALESCAKE_DELETE, payload:response.data.deletedCake})\r\n        \r\n//     })\r\n//     .catch(error=>console.log(error.response))\r\n\r\n\r\n// }\r\n\r\n// export const updateDisableCake=(id)=>dispatch=>{\r\n\r\n//     dispatch({type:SET_CAKE_DISABLE, payload:id})\r\n\r\n\r\n// }\r\n\r\n// export const changeUpdateCake=(value)=>dispatch=>{\r\n\r\n//     console.log('VALUE',value)\r\n//     dispatch({type:SET_CAKE_UPDATE, payload:value})\r\n\r\n// }\r\n\r\n// export const saveUpdateCake=(newValue,id)=>dispatch=>{\r\n\r\n\r\n//     if(newValue===''){\r\n//         return dispatch({type:SET_CAKE_UPDATED_ERROR, payload:'You have to insert at least one letter'})\r\n//     }\r\n\r\n//     console.log('VALUE SAVED',id)\r\n\r\n//     const headers={\r\n//         'Content-type':'application/json',\r\n//         'authorization': localStorage.getItem('token')\r\n\r\n//     }\r\n\r\n//     axios.put(`/api/cake/${id}`,{\r\n//         headers:headers,\r\n//         body:newValue\r\n//     }).then(response=>{\r\n//         console.log('RESPONSE',response)\r\n//         dispatch({type:SET_CAKE_UPDATED, payload:{updatedCake:response.data.updatedCake, newValue:newValue}})\r\n//         dispatch({type:SET_CAKE_UPDATED_ERROR, payload:''})\r\n//     })\r\n//     .catch(error=>dispatch({type:SET_CAKE_UPDATED_ERROR, payload:error.response.data.error}))\r\n\r\n// }\r\n\r\n\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nexport const autoReadingCakes=()=>dispatch=>{\r\n\r\n    console.log('AUTOREADINGCAKES')\r\n\r\n    let autoReadingIngredients=actions.autoReadingIngredients()\r\n    dispatch(autoReadingIngredients)\r\n    \r\n    const headers={\r\n        'Content-type':'application/json',\r\n        'authorization':localStorage.getItem('token')\r\n    }\r\n\r\n    axios.get(\"/api/cake\",{\r\n        headers:headers\r\n    }).then(response=>{\r\n        \r\n        dispatch(setCake(response.data.result))\r\n        dispatch(setCakeUpdateEmptyAuto())\r\n        \r\n\r\n    }\r\n        )\r\n    .catch(error=>console.log('ERROR',error.response.data))\r\n\r\n}\r\n\r\nexport const insertCakeAction=(value)=>dispatch=>{\r\n\r\n    console.log(value.name)\r\n\r\n    dispatch(setCakeInsert({name:value.name,value:value.value}))\r\n    \r\n}\r\n\r\n\r\nexport const insertCake=(value)=>dispatch=>{\r\n\r\n\r\n    console.log('insert cake',value)\r\n\r\n    if (value.name==='' || value.weight==='' || value.imgLink===''){\r\n        return dispatch(setCakeError({error:'Please fill all fields'}))\r\n    }\r\n\r\n    if(value.ingredients.length===0){\r\n        return dispatch(setCakeError({error:'Please insert at least one ingredient'}))\r\n    }\r\n\r\n\r\n    const headers={\r\n        'Content-type':'application/json',\r\n        'authorization':localStorage.getItem('token')\r\n    }\r\n\r\n    axios.post(\"/api/cake\",{\r\n        headers:headers,\r\n        body:value\r\n    }).then(response=>{\r\n        console.log('RESPONSE CAKE',response)\r\n        dispatch(setCake(response.data.result))\r\n        dispatch(setCakeEmpty({cakeInfo:''}))\r\n        dispatch(setCakeError({error:''}))\r\n        dispatch(setCheckFalseIngredient(false))\r\n    })\r\n    .catch(error=>dispatch(setCakeError(error.response.data.result)))\r\n\r\n    \r\n}\r\n\r\nexport const insertIngredientCake=(name,checked)=>dispatch=>{\r\n\r\n    \r\n\r\n    let obj={name:name, checked:checked}\r\n\r\n    dispatch(setCakeIngredient(obj))\r\n    dispatch(setCheckIngredient(obj))\r\n\r\n}\r\n\r\n\r\nexport const deleteCake=(id)=>dispatch=>{\r\n\r\n    console.log('id',id)\r\n\r\n    const headers={\r\n        'Content-type':'application/json',\r\n        'authorization':localStorage.getItem('token')\r\n    }\r\n\r\n    axios.delete(`/api/cake/${id}`,{\r\n        headers:headers\r\n    }).then(response=>{\r\n        console.log('response after deleted',response)\r\n        dispatch(setCakeDeleted(response.data.deletedCake))\r\n        //dispatch({type:SET_SALESCAKE_DELETE, payload:response.data.deletedCake})\r\n        \r\n    })\r\n    .catch(error=>console.log(error.response))\r\n\r\n\r\n}\r\n\r\nexport const updateDisableCake=(id)=>dispatch=>{\r\n\r\n    dispatch(setCakeDisable(id))\r\n\r\n\r\n}\r\n\r\nexport const changeUpdateCake=(value,id)=>dispatch=>{\r\n\r\n    console.log('VALUE',value)\r\n    console.log('ID',id)\r\n    dispatch(setCakeUpdate({cakeUpdateId:id,newValue:value}))\r\n\r\n}\r\n\r\nexport const saveUpdateCake=(id,cakes)=>dispatch=>{\r\n\r\n    cakes.map(cake=>{\r\n        if(cake.id===id){\r\n            console.log('new valeu before',cake.newValue)\r\n            if(cake.newValue===undefined || cake.newValue===''){\r\n                console.log('new value undefined',cake.newValue)\r\n                return dispatch(setCakeUpdatedError({error:'You have to insert at least one letter',id:id}))\r\n            }\r\n\r\n\r\n\r\n            const headers={\r\n                'Content-type':'application/json',\r\n                'authorization': localStorage.getItem('token')\r\n        \r\n            }\r\n        \r\n            axios.put(`/api/cake/${id}`,{\r\n                headers:headers,\r\n                body:cake.newValue\r\n            }).then(response=>{\r\n                console.log('RESPONSE',response)\r\n                \r\n                dispatch(setCakeUpdated({updatedCake:response.data.updatedCake, newValue:cake.newValue}))\r\n                dispatch(setCakeUpdateEmpty({cakeUpdateId:id}))\r\n                //dispatch(setCakeUpdatedError({error:''}))\r\n            })\r\n            .catch(error=>dispatch(setCakeUpdatedError({error:error.response.data.error})))\r\n\r\n\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const selectCake=state=>state.cake\r\n\r\n\r\n\r\n//** */\r\n\r\n","import React from 'react';\r\nimport './ingredientincake.css'\r\n\r\nfunction IngredientInCakeList(props){\r\n\r\n\r\n    \r\n\r\n\r\n    function renderIngredients(){\r\n        return props.ingredients.map(ingredient=>{\r\n            return (\r\n                <div className=\"elem-ingredient\" key={ingredient.name}>\r\n                    <input type=\"checkbox\" checked={ingredient.checked} name={ingredient.name} onChange={props.insertIngredientCakeAction}/>\r\n                    <label>\r\n                        <b>{ingredient.name}</b>\r\n                    </label>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            {renderIngredients()}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default IngredientInCakeList;","import React,{useEffect} from 'react';\r\nimport CakeList from '../Lists/cakeList';\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../redux/actions/indexCake';\r\nimport IngredientInCakeList from '../Lists/ingredientInCakeList';\r\nimport cakeButton from './cakeButton.css'\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {selectCake,\r\n        autoReadingCakes,\r\n        insertCake,\r\n        insertCakeAction,\r\n        insertIngredientCake,\r\n        deleteCake,\r\n        updateDisableCake,\r\n        changeUpdateCake,\r\n        saveUpdateCake} from '../redux/actions/indexCake';\r\nimport {selectIngredient} from '../redux/actions/index';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//** */\r\n\r\n\r\n// function CakeButton(props){\r\n\r\n\r\n//     useEffect(()=>{\r\n\r\n//         props.autoReadingCakes()\r\n\r\n//     }, [])\r\n\r\n//     function insertCake(){\r\n\r\n//         props.insertCake(props.cakes.insertCake)\r\n\r\n//     }\r\n\r\n//     function changeData(e){\r\n\r\n//             props.insertCakeAction(e.target)\r\n//     }\r\n\r\n//     function insertIngredientCake(e){\r\n\r\n//         console.log('CHECINGREDIENT',e.target.checked)\r\n//         props.insertIngredientCake(e.target.name,e.target.checked)\r\n//     }\r\n\r\n//     function deleteEvent(e){\r\n\r\n//         props.deleteCake(e.target.id)\r\n\r\n\r\n//     }\r\n\r\n//     function updateEvent(e){\r\n\r\n//        props.updateDisableCake(e.target.id)\r\n\r\n//     }\r\n\r\n//     function changeUpdateCake(e){\r\n\r\n//         props.changeUpdateCake(e.target.value)\r\n//     }\r\n\r\n//     function saveUpdateCake(e){\r\n\r\n        \r\n\r\n//         props.saveUpdateCake(props.cakeUpdate, e.target.id)\r\n\r\n//     }\r\n\r\n\r\n\r\n//     return(\r\n//         <div>\r\n//             <button onClick={insertCake}>Insert Cake</button>\r\n//             <input type=\"text\" value={props.cakes.insertCake.name} onChange={changeData} name=\"name\" placeholder=\"Name cake\"/>\r\n//             <input type=\"text\"  value={props.cakes.insertCake.weight} onChange={changeData} name=\"weight\" placeholder=\"weight\"/>\r\n//             <input type=\"text\"  value={props.cakes.insertCake.imgLink} onChange={changeData} name=\"imgLink\" placeholder=\"imglink\"/>\r\n//             <div>\r\n//                 <p>{props.error ? props.error : null}</p>\r\n//             </div>\r\n//             <div className=\"component-ingredientList\">\r\n//                 <IngredientInCakeList ingredients={props.ingredients} insertIngredientCake={insertIngredientCake}/>\r\n//             </div>\r\n//             <div className=\"component-cakeList\">\r\n//             <CakeList cakes={props.cakes.cakes} deleteEvent={deleteEvent} updateEvent={updateEvent} changeUpdateCake={changeUpdateCake}\r\n//             saveUpdateCake={saveUpdateCake} errorsUpdate={props.errorsUpdate}/>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// function mapStateToProps(state){\r\n\r\n//     console.log('STATE IN CAKE',state)\r\n\r\n//     return{\r\n//         cakeUpdate:state.cakes.cakeUpdate,\r\n//         cakes:state.cakes,\r\n//         error:state.cakes.errors,\r\n//         errorsUpdate:state.cakes.errorsUpdate,\r\n//         ingredients:state.ingredients.ingredients\r\n//     }\r\n// }\r\n\r\n\r\n\r\n// export default connect(mapStateToProps,actions)(CakeButton);\r\n\r\n\r\nfunction CakeButton(){\r\n\r\n    const dispatch=useDispatch()\r\n    \r\n\r\n    const cakes=useSelector(selectCake)\r\n\r\n    const ingredients=useSelector(selectIngredient)\r\n\r\n    \r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        \r\n        \r\n    \r\n        \r\n        dispatch(autoReadingCakes())\r\n        \r\n        \r\n\r\n    }, [])\r\n\r\n    function insertCakeActionComp(){\r\n\r\n        dispatch(insertCake(cakes.insertCake))\r\n\r\n    }\r\n\r\n    function changeData(e){\r\n\r\n            dispatch(insertCakeAction(e.target))\r\n    }\r\n\r\n    function insertIngredientCakeAction(e){\r\n\r\n      \r\n        dispatch(insertIngredientCake(e.target.name,e.target.checked))\r\n    }\r\n\r\n    function deleteEvent(e){\r\n\r\n        dispatch(deleteCake(e.target.id))\r\n\r\n\r\n    }\r\n\r\n    function updateEvent(e){\r\n\r\n       dispatch(updateDisableCake(e.target.id))\r\n\r\n    }\r\n\r\n    function changeUpdateCakeAction(e){\r\n\r\n        dispatch(changeUpdateCake(e.target.value,e.target.id))\r\n    }\r\n\r\n    function saveUpdateCakeAction(e){\r\n\r\n        \r\n\r\n        dispatch(saveUpdateCake(e.target.id, cakes.cakeUpdate))\r\n\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <button onClick={insertCakeActionComp}>Insert Cake</button>\r\n            <input type=\"text\" value={cakes.insertCake.name} onChange={changeData} name=\"name\" placeholder=\"Name cake\"/>\r\n            <input type=\"text\"  value={cakes.insertCake.weight} onChange={changeData} name=\"weight\" placeholder=\"weight\"/>\r\n            <input type=\"text\"  value={cakes.insertCake.imgLink} onChange={changeData} name=\"imgLink\" placeholder=\"imglink\"/>\r\n            <div>\r\n                <p>{cakes.errors ? cakes.errors : null}</p>\r\n            </div>\r\n            <div className=\"component-ingredientList\">\r\n                <IngredientInCakeList ingredients={ingredients.ingredients} insertIngredientCakeAction={insertIngredientCakeAction}/>\r\n            </div>\r\n            <div className=\"component-cakeList\">\r\n            <CakeList cakes={cakes.cakes} cakeUpdate={cakes.cakeUpdate} deleteEvent={deleteEvent} updateEvent={updateEvent} changeUpdateCakeAction={changeUpdateCakeAction}\r\n            saveUpdateCakeAction={saveUpdateCakeAction} errorsUpdate={cakes.errorsUpdate}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default CakeButton;\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ingredientList from './ingredientList.css';\r\nimport * as actions from '../redux/actions/index'\r\n\r\n\r\nfunction IngredientList(props){\r\n\r\n   \r\n\r\n    function checkIngredient(e){\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    function renderIngredients(){\r\n        return props.ingredients.map(ingredient=>{\r\n            return (\r\n                <div key={ingredient.name}>\r\n               {ingredient.disable  ?\r\n               <>\r\n                <input type=\"checkbox\" name={ingredient.name} onClick={props.changeData}/>\r\n                \r\n                <label className=\"ingredient\">\r\n                    <b>{ingredient.name}</b>\r\n                </label>\r\n               \r\n                </>\r\n                :\r\n                props.ingredientUpdate.map(ingrUp=>{\r\n                    if(ingrUp.id===ingredient.id){\r\n                        return(\r\n                <>\r\n                <input value={ingrUp.newValue} \r\n                 id={ingredient.id} type=\"text\" \r\n                name={ingredient.name} onChange={props.changeUpdateIngredientAction}/>\r\n                <button id={ingredient.id} onClick={props.saveIngredient}>Save</button>\r\n                <div><p>{ingrUp.errorUpdate}</p></div>\r\n                \r\n                </>\r\n                        )\r\n                    }\r\n                })\r\n\r\n                }\r\n                \r\n                <>\r\n                \r\n                <button id={ingredient.id} className=\"delete-button\" onClick={props.deleteEvent}>Delete</button>\r\n                <button id={ingredient.id} className=\"update-button\" onClick={props.updateEvent}>Update</button>\r\n                </>\r\n                 \r\n                \r\n                \r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {renderIngredients()}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// function mapStateToProps(state){\r\n\r\n//     console.log('state',state)\r\n//     return{\r\n//         ingredients:state.ingredients.ingredients\r\n//     }\r\n// }\r\n\r\nexport default IngredientList;","import React,{useState,useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../redux/actions/index';\r\nimport IngredientList from '../Lists/ingredientList';\r\n\r\n//**REDUX TOOLKIT */\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {selectIngredient, \r\n    autoReadingIngredients,\r\n    insertIngredient,\r\n    updateEnableIngredient,\r\n    deleteIngredient,\r\n    insertIngredientAction,\r\n    changeUpdateIngredient,\r\n    saveIngredientUpdated} from '../redux/actions/index'\r\n\r\n//** */\r\n\r\n\r\n// function IngredientButton(props){\r\n\r\n//     const [ingredientData, setIngredientData]=useState({ingredient:''});\r\n//     const [ingredientUpdate, setIngredientUpdate]=useState({ingredientUpdate:''})\r\n\r\n    \r\n//     useEffect(()=>{\r\n\r\n//         props.autoReadingIngredients()\r\n\r\n//     },[]);\r\n\r\n//     function changeData(e){\r\n\r\n      \r\n         \r\n//         props.insertIngredientAction(e.target.value)\r\n\r\n//     }\r\n\r\n//     function insertIngredient(){\r\n\r\n      \r\n\r\n//         props.insertIngredient(props.ingredients.insertIngredient)\r\n\r\n\r\n//     }\r\n\r\n//     function updateEvent(e){\r\n\r\n//         props.updateEnableIngredient(e.target.id)\r\n\r\n//     }\r\n\r\n//     function deleteEvent(e){\r\n\r\n       \r\n//         props.deleteIngredient(e.target.id)\r\n\r\n//     }\r\n\r\n//     function changeUpdateData(e){\r\n\r\n//         console.log(e.target.value)\r\n//         setIngredientUpdate({...ingredientUpdate, ingredientUpdate:e.target.value})\r\n\r\n//     }\r\n\r\n//     function saveIngredient(e){\r\n\r\n//         props.saveIngredientUpdated(e.target.id, ingredientUpdate)\r\n\r\n\r\n//     }\r\n\r\n   \r\n    \r\n    \r\n\r\n//     return(\r\n//         <div>\r\n//         <div>\r\n//             <input type=\"text\" value={props.ingredients.insertIngredient}\r\n//             placeholder=\"ingredient\"\r\n//             name=\"ingredient\" onChange={changeData}/>\r\n//             <button onClick={insertIngredient}>Insert Ingredient</button>\r\n//         </div>\r\n//         <div>\r\n//             <p><b>{props.error ? props.error.error: null}</b></p>\r\n//         </div>\r\n//         <div>\r\n//             <IngredientList ingredients={props.ingredients.ingredients} \r\n//             stateView={props.stateView}\r\n//             deleteEvent={deleteEvent} \r\n//             updateEvent={updateEvent}\r\n//             changeUpdateData={changeUpdateData}\r\n//             ingredientUpdate={ingredientUpdate.ingredientUpdate}\r\n//             saveIngredient={saveIngredient}\r\n//             errorsUpdate={props.errorsUpdate}\r\n//             />\r\n//         </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n// function mapStateToProps(state){\r\n//     console.log('ERROR STATE',state)\r\n//     return{\r\n//         error:state.ingredients.errors,\r\n//         ingredients:state.ingredients,\r\n//         errorsUpdate:state.ingredients.errorsUpdate\r\n        \r\n        \r\n//     }\r\n// }\r\n// export default connect(mapStateToProps,actions)(IngredientButton);\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nfunction IngredientButton(){\r\n\r\n    const dispatch=useDispatch()\r\n    \r\n\r\n    const ingredients=useSelector(selectIngredient)\r\n\r\n    console.log('INGREDIENTS',ingredients)\r\n\r\n\r\n\r\n    // const [ingredientData, setIngredientData]=useState({ingredient:''});\r\n    // const [ingredientUpdate, setIngredientUpdate]=useState({ingredientUpdate:''})\r\n\r\n\r\n\r\n    \r\n    useEffect(()=>{\r\n\r\n        dispatch(autoReadingIngredients())\r\n\r\n    },[]);\r\n\r\n    function changeData(e){\r\n\r\n      \r\n         \r\n        dispatch(insertIngredientAction(e.target.value))\r\n\r\n    }\r\n\r\n    function insertIngredientActionComp(){\r\n\r\n      \r\n\r\n        dispatch(insertIngredient(ingredients.insertIngredient))\r\n\r\n\r\n    }\r\n\r\n    function updateEvent(e){\r\n\r\n        dispatch(updateEnableIngredient(e.target.id))\r\n\r\n    }\r\n\r\n    function deleteEvent(e){\r\n\r\n       \r\n        dispatch(deleteIngredient(e.target.id))\r\n\r\n    }\r\n\r\n    function changeUpdateIngredientAction(e){\r\n\r\n        console.log(e.target.value)\r\n\r\n        dispatch(changeUpdateIngredient(e.target.value, e.target.id))\r\n        //setIngredientUpdate({...ingredientUpdate, ingredientUpdate:e.target.value})\r\n\r\n    }\r\n\r\n    function saveIngredient(e){\r\n\r\n       dispatch(saveIngredientUpdated(e.target.id, ingredients.ingredientUpdate))\r\n        //setIngredientUpdate({...ingredientUpdate, ingredientUpdate:''})\r\n\r\n\r\n    }\r\n\r\n   \r\n    \r\n    \r\n\r\n    return(\r\n        <div>\r\n        <div>\r\n            <input type=\"text\"\r\n            //**SI INCAZZA SE METTO IL VALUE QUANDO VADO A CANCELLARE PER LA PRIMA VOLTA DOPO IL CARICAMENTO,QUALCHE INGREDIENT */\r\n            value={ingredients.insertIngredient}\r\n            //** */\r\n            placeholder=\"ingredient\"\r\n            name=\"ingredient\" onChange={changeData}/>\r\n            <button onClick={insertIngredientActionComp}>Insert Ingredient</button>\r\n        </div>\r\n        <div>\r\n            <p><b>{ingredients.errors ? ingredients.errors.error: null}</b></p>\r\n        </div>\r\n        <div>\r\n            <IngredientList ingredients={ingredients.ingredients} \r\n            \r\n            deleteEvent={deleteEvent} \r\n            updateEvent={updateEvent}\r\n            changeUpdateIngredientAction={changeUpdateIngredientAction}\r\n            ingredientUpdate={ingredients.ingredientUpdate}\r\n            saveIngredient={saveIngredient}\r\n            //errorsUpdate={ingredients.errorsUpdate}\r\n            />\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null,actions)(IngredientButton);\r\n\r\n//** */","import React from 'react';\r\n\r\n\r\nfunction cakeInSales(props){\r\n\r\n    function renderCakes(){\r\n        return props.saleCake.map(cake=>{\r\n            return (\r\n                <div key={cake.name}>\r\n                    <input id={cake.id} type=\"checkbox\" name={cake.name} checked={cake.enableSetPrice} onChange={props.changeInsertPrice}/>\r\n                    <label><b>{cake.name}</b></label>\r\n                    \r\n                    {cake.enableSetPrice ? \r\n\r\n                        props.insertSales.map(sale=>{\r\n                        if(sale.id===cake.id){\r\n\r\n                         return (\r\n                         \r\n                            <>\r\n                        <input value={sale.first} id={cake.id} name=\"first\" type=\"text\"  onChange={props.changePrice}/>First choice\r\n                        <input value={sale.second} id={cake.id} name=\"second\" type=\"text\"  onChange={props.changePrice}/>Second choice\r\n                        <input value={sale.third} id={cake.id} name=\"third\" type=\"text\"  onChange={props.changePrice}/>Third choice\r\n                        <div key={sale.name}>\r\n                         <p>{sale.errorFirstPrice}</p>\r\n                        </div>\r\n                        \r\n                </>\r\n                         \r\n\r\n                         )\r\n\r\n\r\n                        }})\r\n                        \r\n                :\r\n                null                \r\n                    }\r\n\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n                {renderCakes()}\r\n\r\n                {props.resultInsert.length!==0 ? \r\n                \r\n                props.resultInsert.map(result=>{\r\n                    return (\r\n                        <div key={result}><p>You have inserted {result}</p></div>\r\n                    )\r\n                })\r\n                :\r\n                null\r\n            }\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default cakeInSales;","import React from 'react';\r\nimport { SET_SALESPRICE_ELEMENT } from '../redux/reducers/salesType';\r\nimport './salesList.css'\r\n\r\nfunction SalesList(props){\r\n\r\n    function renderSales(){\r\n        return props.salesPriceElement.map(elem=>{\r\n            return (\r\n                <div className=\"element-info\" key={elem.cakeId}>\r\n                    <img src={elem.listcakes[0].imgLink} width=\"50\"\r\n                height=\"50\"/>\r\n                \r\n                    <p><b>{elem.listcakes[0].name}</b></p>\r\n                    \r\n                    <p className=\"element-price\">{elem.first}</p><p className=\"element-type\">Euro</p><br/>\r\n                    \r\n                    <p className=\"element-price\">{elem.second}</p><p className=\"element-type\">Euro</p><br/>\r\n                    \r\n                    <p className=\"element-price\">{elem.third}</p><p className=\"element-type\">Euro</p><br/>\r\n                    \r\n                    <p className=\"element-pubblication\"><b>Pubblication date</b></p><span>{elem.pubblication_date}</span><br/>\r\n                    <button>Update</button>\r\n                <button>Delete</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h3>This is a sales list</h3>\r\n            {renderSales()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalesList;","import React,{useEffect} from 'react';\r\nimport CakeInSales from '../Lists/cakeInSales';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../redux/actions/indexSales'\r\nimport SalesList from '../Lists/salesList';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {selectSale,\r\n    autoReadingSales,\r\n    autoReadingSalesPrice,\r\n    insertCakeInSales,\r\n    insertSalesCakeAction,\r\n    changeInsertPrice} from '../redux/actions/indexSales'\r\n\r\n\r\n// function SalesButton(props){\r\n\r\n//     useEffect(()=>{\r\n//         console.log('inside use effect')\r\n//         props.autoReadingSales()\r\n//         props.autoReadingSalesPrice()\r\n//     }, [])\r\n\r\n//     function insertCakeInSales(){\r\n\r\n//         props.insertCakeInSales(props.insertSales)\r\n\r\n//     }\r\n\r\n//     function changePrice(e){\r\n\r\n//         props.insertSalesCakeAction(e.target)\r\n\r\n//     }\r\n\r\n//     function changeInsertPrice(e){\r\n        \r\n//         props.changeInsertPrice(e.target)\r\n//     }\r\n\r\n//     return(\r\n//         <div>\r\n//             <button onClick={insertCakeInSales}>Insert Cake in Sales</button>\r\n            \r\n//                 <p>{props.errors ? props.errors : null}</p>\r\n            \r\n//             <div>\r\n\r\n//                 <CakeInSales insertSales={props.insertSales} \r\n//                 resultInsert={props.resultInsert}\r\n//                 saleCake={props.saleCake} changePrice={changePrice} \r\n//                 changeInsertPrice={changeInsertPrice}/>\r\n//             </div>\r\n//             <div>\r\n//                 <SalesList salesPriceElement={props.salesPriceElement}/>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// function mapStateToProps(state){\r\n// console.log('SALES STATE',state)\r\n//     return {\r\n//         saleCake:state.sales.sales,\r\n//         insertSales:state.sales.insertSales,\r\n//         errors:state.sales.errors,\r\n//         salesPriceElement:state.sales.salesPriceElement,\r\n//         resultInsert:state.sales.resultInsert\r\n//     }\r\n// }\r\n// export default connect(mapStateToProps, actions)(SalesButton);\r\n\r\nfunction SalesButton(props){\r\n\r\n    const dispatch=useDispatch()\r\n\r\n    const sales=useSelector(selectSale())\r\n\r\n    console.log('STATE IN SALESBUTTON',sales)\r\n\r\n    useEffect(()=>{\r\n        console.log('inside use effect')\r\n        dispatch(autoReadingSales())\r\n        dispatch(autoReadingSalesPrice())\r\n    }, [])\r\n\r\n    function insertCakeInSalesAction(){\r\n\r\n        dispatch(insertCakeInSales(sales.insertSales))\r\n\r\n    }\r\n\r\n    function changePrice(e){\r\n\r\n        dispatch(insertSalesCakeAction(e.target.id,e.target.value,e.target.name))\r\n\r\n    }\r\n\r\n    function changeInsertPriceAction(e){\r\n        \r\n        dispatch(changeInsertPrice(e.target.checked, e.target.id))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <button onClick={insertCakeInSalesAction}>Insert Cake in Sales</button>\r\n            \r\n                {/* <p>{props.errors ? props.errors : null}</p> */}\r\n            \r\n            <div>\r\n\r\n                <CakeInSales \r\n                insertSales={sales.insertSales} \r\n                resultInsert={sales.resultInsert}\r\n                saleCake={sales.sales}\r\n                changePrice={changePrice} \r\n                changeInsertPrice={changeInsertPriceAction}/>\r\n            </div>\r\n            <div>\r\n                <SalesList salesPriceElement={sales.salesPriceElement}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, actions)(SalesButton);","import React,{useState, useEffect} from 'react';\r\nimport CakeButton from './CakeButton';\r\nimport IngredientButton from './IngredientButton';\r\nimport SalesButton from './SalesButton'\r\n\r\n\r\nfunction Buttons(){\r\n\r\n    const [buttonView,setButtonView]=useState({cake:false, ingredient:false, sell:false})\r\n\r\n    function viewButton(e){\r\n        console.log('E TARGET NAME',buttonView[e.target.name])\r\n        setButtonView({cake:false, ingredient:false, sell:false, [e.target.name]:!buttonView[e.target.name]})\r\n        \r\n    }\r\n\r\n    function renderButtons(){\r\n        if(buttonView.cake){\r\n            return <CakeButton />\r\n        }\r\n        if(buttonView.ingredient){\r\n            return <IngredientButton />\r\n        }\r\n        if(buttonView.sell){\r\n            return <SalesButton />\r\n        }\r\n    }\r\n\r\n    // useEffect(()=>{\r\n    //     console.log('BUTTON',buttonView)\r\n    // })\r\n\r\n    return(\r\n        <div>\r\n               <h4>Buttons</h4>\r\n               <button name=\"ingredient\" onClick={viewButton}>Ingredient field</button>\r\n               <button name=\"cake\" onClick={viewButton}>Cake field</button>\r\n               <button name=\"sell\" onClick={viewButton}>Sales Cake field</button>\r\n               <div>\r\n               {renderButtons()}\r\n            </div>\r\n               \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Buttons;","import React from 'react';\r\nimport Buttons from '../Buttons/Buttons'\r\n\r\n\r\n\r\nfunction AdministrationPage(){\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h3>Welcome on Administration Page, here you can add the ingredients that you use with your cakes</h3>\r\n            <h6>Please follow these steps in order to add your cake</h6>\r\n            <ul>\r\n                <li>Create your ingredients if they don't appear in the list</li>\r\n                <li>Create your cake with your ingredients</li>\r\n                <li>Sell your cake with prices in first second and third choice</li>\r\n            </ul>\r\n            <Buttons/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdministrationPage;","import React from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport AdministrationPage from '../AuthenticatedComponents/AdministrationPage';\r\n\r\n\r\n\r\n\r\nfunction AuthRoute(){\r\n\r\n    return(\r\n        <div>\r\n        \r\n        <Route exact path=\"/administrationpage\" component={AdministrationPage}/>\r\n        <Redirect from=\"*\" to=\"/administrationpage\"></Redirect>\r\n        \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AuthRoute;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {NavLink, withRouter} from 'react-router-dom'\r\n\r\n\r\n// function Header(props){\r\n\r\n\r\n//     function renderHeader(){\r\n//         switch (props.auth.token){\r\n//             case undefined:\r\n//                 return (\r\n//                     <div>\r\n//             <ul className=\"nav\">\r\n//             <li className=\"nav-item\">\r\n//             {/* <a className=\"nav-link active\" href=\"/register\">Register</a> */}\r\n//             <NavLink activeClassName=\"text-info\" to=\"/login\" className=\"nav-link\">Login</NavLink>\r\n//             </li>\r\n//             <li className=\"nav-item\">\r\n//             {/* <a className=\"nav-link active\" href=\"/login\">Login</a> */}\r\n//             <NavLink activeClassName=\"text-info\" to=\"/register\" className=\"nav-link\">Register</NavLink>\r\n//             </li>\r\n//             </ul>\r\n//         </div>\r\n//                 )\r\n//                 default:\r\n//                     return (\r\n//                         <div>\r\n//                         <ul className=\"nav\">\r\n//                         <li className=\"nav-item\">\r\n//                         <a className=\"nav-link active\" onClick={props.logout}>Logout</a>\r\n//                         </li>\r\n//                         </ul>\r\n//                         </div>\r\n\r\n//                     )\r\n//         }\r\n//     }\r\n\r\n\r\n\r\n\r\n//     console.log(props)\r\n\r\n//     return(\r\n//         <div>\r\n//             {renderHeader()}\r\n//         </div>\r\n\r\n\r\n//     )\r\n// }\r\n\r\n// function mapStateToProps(state){\r\n//     return{\r\n//         auth:state.auth\r\n//     }\r\n// }\r\n\r\n// export default connect(mapStateToProps,null)(Header);\r\n\r\nfunction Header(props){\r\n\r\n\r\n    function renderHeader(){\r\n        switch (props.token){\r\n            case undefined:\r\n                return (\r\n                    <div>\r\n            <ul className=\"nav\">\r\n            <li className=\"nav-item\">\r\n            {/* <a className=\"nav-link active\" href=\"/register\">Register</a> */}\r\n            <NavLink activeClassName=\"text-info\" to=\"/login\" className=\"nav-link\">Login</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n            {/* <a className=\"nav-link active\" href=\"/login\">Login</a> */}\r\n            <NavLink activeClassName=\"text-info\" to=\"/register\" className=\"nav-link\">Register</NavLink>\r\n            </li>\r\n            </ul>\r\n        </div>\r\n                )\r\n                default:\r\n                    return (\r\n                        <div>\r\n                        <ul className=\"nav\">\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" onClick={props.logout}>Logout</a>\r\n                        </li>\r\n                        </ul>\r\n                        </div>\r\n\r\n                    )\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    console.log(props)\r\n\r\n    return(\r\n        <div>\r\n            {renderHeader()}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default connect(null,null)(Header);","import React,{useEffect} from 'react';\r\nimport PublicRoute from '../components/routes/PublicRoute';\r\nimport AuthRoute from '../components/routes/AuthRoute';\r\nimport Login from './Access/Login';\r\nimport Register from './Access/Register';\r\nimport Header from '../components/Access/Header';\r\nimport {connect, useDispatch} from 'react-redux';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\n//import * as actions from './redux/actions/index';\r\nimport {logout, autoLogin, selectToken} from './redux/actions/index';\r\n//**REDUX TOOLKIT */\r\nimport {useSelector} from 'react-redux'\r\n\r\n//** */\r\n\r\n\r\n\r\n// function App(props){\r\n\r\n//     //**REDUX TOOLKIT */\r\n\r\n//     const token=useSelector((state)=>{\r\n//         console.log('SELECTOOOOOR',state)\r\n//         return(\r\n//         state.auth.token\r\n//         )\r\n//     })\r\n\r\n//     //** */\r\n\r\n//     console.log('App', token)\r\n\r\n//     useEffect(()=>{\r\n\r\n//        // props.autoLogin()\r\n\r\n//         //**REDUX TOOLKIT */\r\n//         actions.autoLogin()\r\n//         //** */\r\n\r\n\r\n//     },[])\r\n\r\n\r\n//     function logout(){\r\n//         props.logout()\r\n//     }\r\n\r\n//     return(\r\n//         <div> \r\n//             <BrowserRouter>\r\n//             <Header logout={logout}/>\r\n//             {props.token ? \r\n//             <Route path=\"/\" component={AuthRoute}/>\r\n//             :\r\n//             <Route path=\"/\" component={PublicRoute}/>\r\n//             }\r\n//             </BrowserRouter>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// // function mapStateToProps(state){\r\n// //     return{\r\n// //         token:state.auth.token\r\n// //     }\r\n// // }\r\n\r\n// //**REDUX TOOLKIT */\r\n\r\n\r\n// export default App;\r\n\r\n// //** */\r\n\r\n// //export default connect(mapStateToProps,actions)(App);\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nfunction App(props){\r\n\r\nconst dispatch=useDispatch();\r\n\r\n    const token=useSelector(selectToken)\r\n\r\n\r\n   \r\n\r\n    useEffect(()=>{\r\n\r\n     \r\n        dispatch(autoLogin())\r\n        \r\n\r\n\r\n    },[])\r\n\r\n\r\n    // function logoutAction(){\r\n    //     dispatch(logout())\r\n    // }\r\n\r\n    return(\r\n        <div> \r\n            <BrowserRouter>\r\n            <Header logout={()=>dispatch(logout())} token={token}/>\r\n            {token ? \r\n            <Route path=\"/\" component={AuthRoute}/>\r\n            :\r\n            <Route path=\"/\" component={PublicRoute}/>\r\n            }\r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default App;\r\n\r\n//** */","import React from 'react';\r\nimport {createStore, applyMiddleware} from 'redux'\r\n\r\n//**REDUX TOOLKIT */\r\nimport {configureStore} from '@reduxjs/toolkit';\r\nimport rootReducer from '../reducers/index'\r\n//\r\nimport reducers from '../reducers/index';\r\nimport reduxThunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport ingredientSliceReducerToolkit from '../reducers/ingredientSliceReducerToolkit';\r\nimport authSliceReducerToolkit from '../reducers/authSliceReducerToolkit';\r\nimport homeSliceReducerToolkit from '../reducers/homeSliceReducerToolkit';\r\nimport cakeSliceReducerToolkit from '../reducers/cakeSliceReducerToolkit';\r\nimport saleSliceReducerToolkit from '../reducers/saleSliceReducerToolkit';\r\n\r\n\r\n //**REDUX */\r\n\r\n//const store=createStore(reducers, composeWithDevTools(applyMiddleware(reduxThunk)));\r\n//\r\n\r\n//**REDUX TOOLKIT */\r\n\r\nconst store=configureStore({\r\n    //reducer:rootReducer\r\n    reducer:{\r\n    ingredient:ingredientSliceReducerToolkit,\r\n    auth:authSliceReducerToolkit,\r\n    home:homeSliceReducerToolkit,\r\n    cake:cakeSliceReducerToolkit,\r\n    sale:saleSliceReducerToolkit\r\n    }\r\n\r\n})\r\n\r\n\r\nexport default store;\r\n\r\n\r\n","import React from 'react'\r\nimport  ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Provider} from 'react-redux';\r\nimport store from './components/redux/store/store'\r\n\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n<App/>\r\n</Provider>,document.getElementById(\"root\"));"],"sourceRoot":""}